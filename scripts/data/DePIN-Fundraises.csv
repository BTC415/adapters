﻿projectName,projectId,roundType,roundDate,raiseAmount,sourceEuropeanUnionRL,investors,investorsIds
0xScope,0hgye7,Seed,1/1/2024,5,https://cointelegraph.com/press-releases/0xscope-v2-launches-with-Web3 Capital-ai-data-layer-focus-5m-new-funding-round,"Hashkey, Redpoint, OKX, GSR, Amber, Antalpha, Main Quad, Mask Network, Hash Global, XIN Family","nxzb7m,zhjcle,smqwtv,v81ftp,z37132,3t6j16,hak3sv,thxgaw,us9d7q,goznyl"
0xScope,0hgye7,Seed,9/1/2022,3,https://cointelegraph.com/press-releases/0xscope-raises-3m-seed-round-to-build-a-new-Web3 Capital-data-layer,"ABCDE, Hash Global, Liang Xinjun, Bonfire Union, Mask Network, Bodl","ukzqzd,us9d7q,umf2rw,utyn9u,thxgaw,xk28tk"
3DOS,5dho62,Preseed,12/1/2021,,,"Cercano, Frontures, Iron Key, Alchemist","jart23,2t7a1q,cchzn2,4p826x"
3DOS,5dho62,Seed,10/1/2023,,,"Escape Velocity, Modular","7zvxz8,p99cdg"
3NUM,f5qe2h,Preseed,8/1/2022,1.4,https://www.geekwire.com/2022/seattle-area-startup-developing-Web3 Capital-mobile-numbers-that-mint-as-nfts-raises-cash/,"A100x, Acequia, BlueYard, Notation","zpuq9r,ibk8eu,jo973z,t105wi"
4everland,0tmpgv,Preseed,8/1/2021,1.5,https://medium.com/4everland/4everland-has-raised-1-5-million-dollars-in-a-seed-round-435648b411ef,"Fenbushi, FBG, Bixin, Mint, Random Number","mywjsu,lfbmt3,gun7y3,po1oia,7ku2jz"
4everland,0tmpgv,Seed,12/1/2023,2,https://www.coinlive.com/news-flash/405451,"Arweave, Waterdrip, Bing, Forward Research, Web3 Capital, Arweave, GTS, Hillstone, Polygon, Protocol labs, Dfinity","hhudw8,o7xcsr,ympohv,7hwz6f,pvr738,hhudw8,ldgrye,e0v4rn,8agdnp,ti312b,sgvqqt"
AdHash,p6m3rb,Seed,7/1/2021,1.75,,"Blockrocket, Coinix, Crypto Valley Venture, Blockchain Founders Fund, DATASH, Beresford","p6iv9v,h8sw72,qbk051,b2ybqs,ryj5he,2w7ubz"
Adot,iuet6b,Series A,04/25/2024,3,https://adotweb3.medium.com/adot-founded-by-ex-googler-secures-6m-total-funding-to-build-decentralized-ai-search-32028c677cec,"SevenX, Mask Network, MixMarvel","pu3yyr,thxgaw,qc01as"
Adot,iuet6b,Series A,04/25/2024,3,https://twitter.com/Adot_web3/status/1783439825695318322,"Hash Global, gumi Cryptos, XIN Family	","us9d7q,y5m26s,goznyl"
Aethir,oo2cn2,Seed,7/1/2023,9,https://www.prnewswire.com/news-releases/aethir-closes-150-million-valuation-pre-a-funding-round-to-scale-its-decentralized-cloud-infrastructure-301886287.html,"Animoca, Big Brain, Builder, CitizenX, Hashkey, Maelstrom, Merit Circle, Mirana, Momentum 6, Sanctor, Stratified, Tess Ventures, Youbi, Framework, Infinity","gjt0lb,4l8mmr,hqx0t6,cnjnvc,nxzb7m,rd2mzf,5j0nni,8rcqvw,bah2fw,m05wan,9jfdo8,lzpnns,pcw959,yx4w71,rrtsc3"
Agnostic,2pv22r,Seed,11/1/2022,,,"Atka, BlueYard, Dominance, Kima, Stake, TRGC","z5oj4n,jo973z,9wes1b,egtjkt,hcdvrk,nzxtym"
Agnostiq,anzeat,Preseed,11/1/2020,2,https://www.hpcwire.com/off-the-wire/agnostiq-secures-2m-seed-round-to-further-develop-saas-based-quantum-solutions/,"Differential, Scout, Tensility, Boost, Green Egg, DCVC, Bloomberg Beta","nj1mri,dwir0a,zhen2r,94mx0d,wpxgx7,ambkkn,ymiffp"
Agnostiq,anzeat,Seed,11/1/2022,6.1,https://siliconangle.com/2023/04/05/startup-agnostiq-raises-6-1m-integrate-quantum-computing-hpc/,"Differential, Scout, Tensility, Green Egg, Robert Granieri","nj1mri,dwir0a,zhen2r,wpxgx7,r8l1ds"
Agrotoken,r2yc3l,Seed,1/1/2024,12.5,https://contxto.com/en/agrotech/agrotoken-raises-12-5m-in-pre-series-a-funding/,"Visa, Bunge, Borderless, Xperiment, Beagle Partners LLP, Barn, Matterscale, BYX, Newtopia, OCTAVA, Capital Lab Ventures, Christophe Groh","gnqpgc,c76mxc,buo8ql,t6992i,7gchbe,7puspk,azeayu,6iwa5t,2buriy,odn1sj,2ksxgk,jb5rmn"
Aimedis,p864om,Accelerator,5/1/2021,0.1,,"TDeFi, NonceVC","imxksv,jkryns"
AIOZ,tpqdbi,Seed,1/1/2023,,https://aioz.network/blog/aioz-network-dwf-labs-partnership,"DWF, GD10, Innovion, GFS, Kardia, Master, Vendetta, ZBS","i98114,okjrd0,jw4wz7,lsc0yi,snubsq,ka4f30,nwl5v7,0nsbs7"
AIT,ux0c4s,Seed,04/23/2024,,https://finance.yahoo.com/news/ait-protocol-receives-investment-animoca-075000283.html,Animoca,gjt0lb
AIT,ux0c4s,Seed,12/1/2023,,https://www.binance.com/en/feed/post/2023-12-13-ait-protocol-completes-new-funding-round-with-participation-from-multiple-investors-1317935449953,"MorningStar, Megala, Contango, Momentum 6, BasementDAO, Alpha Protocol Ventures","k9u90q,qa36jx,2bl1fj,bah2fw,llgix7,g4q79j"
AIT,ux0c4s,Seed,12/12/2023,,https://twitter.com/AITProtocol/status/1734558802459152682,"Morningstar, Megala, Contango, Momentum 6, BasementDAO, Alpha Protocol Ventures, Maven, Metabros, Asteroid","k9u90q,qa36jx,2bl1fj,bah2fw,llgix7,g4q79j,967a4z,1t2jxf,fj88qi"
Akash,qmmyw0,Preseed,11/1/2017,1.3,https://www.wsj.com/articles/funding-snapshot-overclock-labs-raises-1-3-million-seed-round-to-automate-cloud-infrastructure-1511300185,"Dokia, PeopleFund, Chorus One, RR2, Marin Digital, Chainlayer, Outpost, AlphablockZ, Carthona, Nautilus, Tuesday, Hone, Genblock, Infinite, Recursive, JECO, SNZ, AGE Crypto, ICE, Ellipti, Assembly, CSC UpShot, Etienne vantKruys, Auren Hoffman, Digital Asset, Wakem, Sikka, Kano One, Forbole, Cypher, Digital Asset, Follow [the] Seed, George Burke, Infinite, Qwerty","b4hdjb,qcvhmz,la4mmt,yibv9g,qyzsbd,jsmrlo,yi2vaq,66xw1k,pmg1r8,50oy3l,emawdh,af2ees,5dsvsj,fxmvug,dx4kss,xkxso5,wu15kr,mzqq7s,i98ktk,knw63n,go7fr1,box926,rwthif,6998je,dnu31w,t30rwx,0yfxp7,3keso5,h25qln,798xl8,dnu31w,5qx1w8,ofjyek,fxmvug,g72mqv"
Akord,5fwdog,Seed,3/1/2022,2.3,https://akord.com/blog/akord-raises-2-3m-to-secure-your-data-until-the-apocalypse,"Arweave, D1Ventures, Hustle, Maven 11, SevenX","hhudw8,m6mz4i,nio0gx,xgzede,pu3yyr"
Aleph,shwbn0,Seed,1/1/2022,10,https://www.coindesk.com/business/2022/01/20/alephim-raises-10m-to-compete-with-amazons-storage-and-computing-service/,"Stratos Technologies, Zee Prime, NOIA, Theia, Bitfwd, Ellipti, Incuba Alpha, Rarestone, TRGC, Token, Seven, Chris McCann, Owen Simonin","3c4o3d,urug6u,j1wulh,0vsaf4,wxro8b,knw63n,q9nh9n,h9g1s5,nzxtym,6dsjxk,lnorr8,ybj995,6rejon"
Alethea,zzxlj6,Series A,10/1/2021,16,https://www.theblock.co/linked/115574/alethea-ai-raises-16-million-venture-funding,"Multicoin, Alameda, Mark Cuban, Bitkraft, Dapper Labs, Galaxy Interactive, Sfermion, LD, Hof, Gemini Frontier, IDEO CoLab, Defiance, White Star, IOSG, Nascent, Borderless, CMS, Sandeep Nailwal, DeFi Dad, Andrew Steinwold, Meltem Demirors, Sid Jain, Haseeb Qureshi, Ravindra Kumar, Gabby Dizon, Jeff Morris Jr, Mike Dudas, DCInvestor, Gmoney, Bitscale","2g0699,b5zojp,pkboiz,y69z86,2mccdz,nlqu6w,emg882,qqc9zd,5s605e,c047hh,l7sko2,qp5s3g,o3c9bd,i1x9du,gnhylz,buo8ql,q4ztc2,9e1gk4,lkgkfl,tupwbv,ivtzio,zkwprh,5xvyy9,m8xiuk,aeoxcb,vvn12f,43zijk,ib18pd,4j98hb,2tgqti"
Allora,qs7j6q,Seed,2/1/2024,,https://www.businesswire.com/news/home/20240201941258/en/Introducing-Allora-A-Self-Improving-Decentralized-AI-Network,"Polychain, Framework, Blockchain Capital, CoinFund, Delphi Digital, dao5, Distributed Global","tqh3bl,yx4w71,te4xtz,szfiug,67mqz0,r54jbx,sknhsa"
Altered State,9limss,Preseed,9/1/2021,,https://medium.com/@alteredstatemachine/altered-state-machine-welcomes-new-crypto-technology-entertainment-and-investment-partners-in-b09344b5d3d8,"0xVentures, Alpha Sigma, Bigcoin, Blockchain Founders Fund, D64, Delphi Digital, Digital Asset, Fantail, Formless, Fourth Revolution, G1, Mask Network, Outlier, Polygon, QVentures, Sheesha, Shima, TRUE, Vendetta, Wave","k93k29,buime9,k8v3go,b2ybqs,3yr1j5,67mqz0,dnu31w,7zvtvf,6ln74n,1b7u42,mar9ip,thxgaw,vjpj24,8agdnp,foos12,nr57n8,lhs5s8,zim0bv,nwl5v7,v6xlk7"
Altered State,9limss,Seed,3/1/2022,,https://medium.com/@alteredstatemachine/altered-state-machine-welcomes-new-crypto-technology-entertainment-and-investment-partners-in-b09344b5d3d8,"6th Man, AirTree, altcoinbuzz, Animoca, Baby Keem, bad crypto podcast, Blockchain Companies, Centrality, Coinbase, CryptoFOMO, DAO Jones, Dialectic, Emergent Entertainment, Enjin, Enjinstarter, Faculty, Flamingo, Forest Road, GoldenTree, Mainst, MEXC, Muse, Nasir Jones, Notables, Numeus, Raised In Space, sammantics, six, TCG, Thomas, Warner Music, Zipmex","hol96b,y8my2p,9uxyqp,gjt0lb,3j4n9l,d88md4,ln7o85,hq4myf,73opsz,pjahyf,j4xyuk,s0sfkv,8akn04,c7vsth,czduss,k1qvmn,h9k79h,jp97kv,dzx3xa,aomyrx,d0dwes,zqwobt,eqqdvr,zegk6g,vt618a,624loe,z15ywj,dgjdgm,ztwm8h,zzc3cd,ehzj0z,uwd92p"
Althea,nag833,Preseed,8/1/2018,1.1,,"2c9, AGE Crypto, Autonomy, Coral DeFi, Figment, UDHC, KR1","dai51z,mzqq7s,6g8wou,fjt6b4,uwuv2v,iwnv3f,ujw2s3"
Ambient,ze30wc,Seed,05/07/2024,2,https://twitter.com/AmbientNetwork/status/1787910257135501367,"Borderless, Solana, Sonic Boom, Primal","buo8ql,tlb60n,o8a9h1,zj4ect"
Andrena,tgalub,Preseed,3/1/2018,1.2,,"Afore, FJ Labs, Max, Yes VC","q4gteq,h58ujg,11ic7a,bjt37s"
Andrena,tgalub,Preseed,6/1/2019,2.6,,"645 Ventures, 9Yards, Bong Koh, Castle Island, Imagination, Jyri Engestrom, Marstar, Ryan Darnell, Spencer Costanzo","zbfwcv,dxtuis,3hqsew,tfbeoa,wagxxr,i1seo2,o58u89,zx1832,puuasi"
Andrena,tgalub,Seed,12/1/2020,5,,"Bossanova, Chaos Capital, Escape Velocity, Jonathan Seaton, Outsiders, Quint","ucjx6z,zfcdde,7zvxz8,a361c4,3nsesl,uulo45"
Andrena,tgalub,Series A,2/1/2023,15,https://www.globenewswire.com/news-release/2023/02/27/2616422/0/en/Andrena-Raises-15-Million-in-Series-A-Funding-Advancing-Its-Mission-to-Provide-Next-Gen-Affordable-Internet-for-All.html,"Dragonfly, Afore, FJ Labs, Castle Island, Chaos Capital, KohFounders, J Ventures, Blockchange, Moonshot Research, Escape Velocity","5tj4jx,q4gteq,h58ujg,tfbeoa,zfcdde,u8s1ak,jmhi4v,hbpmm3,795ufc,7zvxz8"
Anomaly,w3efzq,Preseed,05/15/2024,1.45,https://www.coindesk.com/tech/2024/05/09/protocol-village/,"Decasonic, Shima, BreakOrbit, Round13, Zeneca","rbelby,lhs5s8,dpo7fp,62bdul,hlsmm6"
Antimetal,gzcc2r,Seed,5/1/2023,4.3,https://techcrunch.com/2023/05/08/antimetal-is-putting-ai-to-work-to-root-out-cloud-cost-inefficiencies/,"Framework, Chapter One, IDEO CoLab","yx4w71,gwix1y,l7sko2"
Arcium,v29y88,Seed,11/03/2022,3.5,https://twitter.com/ArciumHQ/status/1588235769860194304,"LongHash, Staking Facilities, NGC, Jump, Big Brain, Anagram, Cogitent, Equilibrium, MonkeVentures, Moonrock","po8xe3,gmkv01,07pxi6,4ssdn4,4l8mmr,fahk60,bxcu1r,1b3xfu,fexzjx,n73vnt"
Arcium,v29y88,Strategic/Angel,05/09/2024,5.5,https://twitter.com/ArciumHQ/status/1788557786537689447,"Greenfield, Coinbase, Heartcore, LongHash, L2IV, Staking Facilities, Smape, Everstake, Anatoly Yakovenko, Keone Hon, Tristan Frizza, Austin Federa","wir0cg,73opsz,awafbg,po8xe3,gha27i,gmkv01,oy5ooz,2p413m,nxop7l,v28nvp,f4g8b6,jm2nln"
ArDrive,e9qw0z,Seed,5/1/2021,1.6,https://www.coindesk.com/business/2021/05/19/arweave-based-permanent-dropbox-raises-16m-seed-round/,"D1Ventures, Digital Renaissance, SevenX, Arweave","m6mz4i,b1hrk6,pu3yyr,hhudw8"
ArDrive,e9qw0z,Series A,2/1/2022,17.2,https://www.coindesk.com/business/2022/03/03/ardrive-raises-17m-to-make-arweaves-data-storage-blockchain-more-usable/,"1kx, ArkStream, Blockchain Capital, Sino Global, Cipholio, Compute, Dorm Room, Foresight, GreenfieLD, Hypersphere, IOSG, LongHash, Mask Network, Momentum 6, OFR, Old Fashion, Ryze, SBS Comms, Arweave","bspyld,zloyr1,te4xtz,apkkjz,ri09e0,maid89,qxxzbk,uktppp,wir0cg,vkntey,i1x9du,po8xe3,thxgaw,bah2fw,aly00l,ukwp87,06o6kd,cgmkn8,hhudw8"
Armur,ka2bzq,Accelerator,1/1/2023,0.12,,"Techstars, Outlier","a1uyxq,vjpj24"
Arweave,0vks67,Preseed,1/1/2018,,,"Chainfund, Multicoin, a16z, 1kx, Arrington, Christopher Heymann, Cyberight, Lasse Clausen, Union Square, Team in Residence, Zeroth.ai","xr8iwa,2g0699,d40or5,bspyld,csfyvy,iutpl6,pmco7y,lwwz2r,vuz4in,5p7vwo,myul3m"
Arweave,0vks67,Series A,3/1/2020,8.3,https://www.axios.com/2020/03/06/arweave-funding-permanent-data-storage-coronavirus,"Signum, Notation, Mechanism, One Block, SevenX, MetaCartel, Crypto Dorm, Hidden Muse, eGirl, Deep, Bering Waters, Collab+Currency, Lotus, NGC, KOI, Lattice, Placeholder, CMCC Global, IOSG, Borderless, Knickerbocker, Coinbase, Block0, Version One, BR, Genblock, First Principles, Insignius, Blockchain Capital, A195, GreenfieLD, Unanimous, Bixin, Big Brain, Krenex, a16z, Maven 11, Union Square, Techstars","oltsrb,t105wi,ulvyo3,4eyql6,pu3yyr,oxjxo0,bd260g,q6o5fc,kk8zod,7c9h68,5b7spr,zaf9xh,fnoivv,07pxi6,3krjgm,q9qqsj,bku3ew,l70dye,i1x9du,buo8ql,eg9pp3,73opsz,719svc,9kybya,oi4yuk,5dsvsj,laupoy,97h38q,te4xtz,7jssah,wir0cg,dcxpa9,gun7y3,4l8mmr,sn094y,d40or5,xgzede,vuz4in,a1uyxq"
Aston,7wi7uw,Seed,1/1/2023,,,"Climate, Liquid 2, Twelve Below, Unlock","4zunln,dc47oz,o217a6,lcoyia"
Atlas Navi,dc50kw,Accelerator,1/1/2020,1.6,https://www.atlasnavi.com/about,European Union,k9wwxc
Autonolas,5wvni1,Seed,9/1/2022,4,https://siliconangle.com/2022/10/12/valory-raises-4m-unlock-software-driven-autonomy-blockchain-apps/,"Atka, Primeblock, Proof+Geist, Semantic, Signature, TRUE","z5oj4n,ciz6c6,0f0771,z0wsaf,qpkks9,zim0bv"
B-cube.ai,qug1e6,Accelerator,,,,Block.IS,ihu5wn
B-Datagray,t47npe,Preseed,2/1/2022,,,"Polygon, Big Brain, Ruben Pujol, Cataliize, R-930","8agdnp,4l8mmr,iov8qk,x2hmqv,hgmxdl"
Bagel,0f91ta,Seed,1/23/2024,3.1,https://www.businesswire.com/news/home/20240122875776/en/Bagel-Network-a-Decentralized-ML-Data-Network-Closes-3.1M-Pre-Seed-Round-Led-by-CoinFund,"CoinFund, Protocol Labs, Borderless, Maven 11, Graph Paper, Breed","szfiug,ti312b,buo8ql,xgzede,8r5o1d,0mqnsr"
Banyan,jkyr67,Seed,11/1/2022,,,"Tess Ventures, Triblock","lzpnns,7r9603"
Barterchain,v8cjbl,Accelerator,4/1/2022,,,"BlockStart, Techstars","ojtach,a1uyxq"
Beegol,qvuc9n,Seed,2/1/2022,2.2,https://www.prnewswire.com/news-releases/indicator-capital-leads-a-us-2-2-million-investment-round-in-beegol-to-improve-the-quality-of-internet-services-301473780.html,"Indicator, PHARUS, Telefonica, Wayra Brazil, Bertha","867w8g,dqo8t4,etf466,qkix5k,q7rgtl"
Beyond,3kk637,Preseed,8/1/2021,,,"Sax, Mana","gkv33p,9edg3l"
Bird.Money,64mpyg,Preseed,12/1/2021,0.6,,Binance,mrgeec
Bittensor,hq4rl7,Seed,1/1/2020,,,"DCG, FirstMark, Polychain, Creative Destruction Lab","apd14v,biweh7,tqh3bl,6erxyq"
Bittensor,hq4rl7,Series A,11/1/2023,,https://opentensor.medium.com/november-network-update-114234436dfb,"Pantera, Collab+Currency, NGC, Gravity","ozeg73,zaf9xh,07pxi6,bqmpxo"
Black Sheep,dg3bp5,Accelerator,1/9/2022,0.15,,Open Web,hfmbi5
Blackbird,vhqz3k,Seed,8/1/2022,11,https://www.theblock.co/post/175214/resy-co-founder-ben-leventhal-raises-11-million-for-new-Web3 Capital-hospitality-platform?utm_source=twitter&utm_medium=social,"Union Square, Shine, Multicoin, Variant, Circle, IAC","vuz4in,cjmn2h,2g0699,ubuz3j,68yk0j,ifm0v5"
Blackbird,vhqz3k,Series A,6/1/2023,24,https://www.prnewswire.com/news-releases/blackbird-labs-raises-24-million-series-a-round-from-a16z-amex-ventures-and-more-to-help-transform-the-way-restaurants-approach-diner-loyalty-301946664.html,"a16z, Amex, QED, Union Square, Shine, Variant, Quality Branded, Rustic Canyon Family, Souvla, Brooks Reitz","d40or5,inrvx2,z5dfl9,vuz4in,cjmn2h,ubuz3j,o2p1vz,1g7zar,uoxmpx,g1mc9m"
bloXmove,3xdu4v,Accelerator,6/1/2021,0.15,,"Aza, Blockwall, Buidlhodl, Coinix, Tenity","pbunpe,n01vko,xgnbev,h8sw72,r0huce"
bloXmove,3xdu4v,Preseed,7/1/2022,0.49,,"Arcanum, Plug and Play","m8rgyb,w19rhh"
Bloxtel,8ukwaw,Preseed,5/1/2022,,https://www.prnewswire.com/news-releases/bloxtel-launches-most-advanced-private-5g-platform-in-the-market-301988245.html,"500 Global, Side Door, Monoceros, Varys, RW3","vmqmcr,qee5ia,566vlr,6mh2rx,pixi8p"
Bluebird Power,h56lyg,Preseed,1/1/2023,0.37,https://siliconcanals.com/crowdfunding/bluebird-power-raises-350k/,North Holland Innovation,8fyych
Bluwhale,fbhsnz,Seed,03/11/2024,7,https://techfundingnews.com/silicon-valleys-ai-web3-startup-bluwhale-from-standford-berkeley-and-tiktok-alums-raise-s-7m-funding/,"SBI, Cardano, Momentum 6, Primal, NxGen, Ghaf, Spyre, Baselayer, Haseeb Qureshi, Charles Huang, Jack McCauley","89f5pk,nrotlx,bah2fw,zj4ect,rgk0ot,jcbbxl,plt0v0,tp01af,5xvyy9,xec29c,q5rv1y"
Borlaug,g2f9pf,Preseed,12/1/2017,,,"VenturesOne, WorldStartup, Indigram Labs","tl1am3,z4ibhx,8vrydr"
Botto,uyclvb,Preseed,,,,Variant,ubuz3j
Botto,uyclvb,Seed,03/22/2024,1.67,https://twitter.com/BottoDAO/status/1771210245404053907,"1kx, Collab+Currency, Variant","bspyld,zaf9xh,ubuz3j"
Botto,uyclvb,Strategic/Angel,02/16/2023,,https://twitter.com/BottoDAO/status/1626249129092415491,Variant,ubuz3j
Braintrust,8mk3xj,Seed,1/1/2018,6,,"Ausum, Cambrian, Finventure, Firework, FounderPartners, Future\Perfect, Galaxy Digital, Hack, HOF, Homebrew, IDEO CoLab, James Everingham, Kevin Moore, Kindred, Scott Belsky, Stacy Brown-Philpot, TRUE, Uprising, Upshift, Vy","8m8hfx,f7ccbr,sn3smj,t8bx9f,gizch2,1labbf,44e83n,a3mqq8,5s605e,tgyjdv,l7sko2,9b0n2b,551q4x,ybmlzh,07gk2w,7h08iv,zim0bv,a4zmhw,2prylf,ii6p9q"
Braintrust,8mk3xj,Series A,10/1/2020,18,https://www.coindesk.com/business/2020/10/01/braintrust-raises-18m-to-bring-defi-thinking-to-the-gig-economy/,"Pantera, Multicoin, Galaxy Digital, Omidyar, 6ixth Event, ACME, Blockchange, Broslyn, Coinbase, Fin, Free Company, Galaxy Interactive, Hashkey, HOF, John Gheur, Kartheek Pulavarthi, Mike Jarmuz, Narwhal, Referent, Sax, SBX, Shervin Pishevar, Tiger Global, TQ, Variant","ozeg73,2g0699,44e83n,3yvrn0,gow2jo,qd2sf6,hbpmm3,r8brcg,73opsz,supj15,84ay2m,nlqu6w,nxzb7m,5s605e,0y9ptr,hzmyi0,0vsoya,wp41fs,tcaja1,gkv33p,b1i2hy,uq7z9h,rotj2h,mudfcv,ubuz3j"
Braintrust,8mk3xj,Series A,10/1/2020,18,https://www.coindesk.com/business/2020/10/01/braintrust-raises-18m-to-bring-defi-thinking-to-the-gig-economy/,"Pantera, Multicoin, Galaxy Digital, Omidyar","ozeg73,2g0699,44e83n,3yvrn0"
Braintrust,8mk3xj,Series B,12/1/2021,100,https://www.reuters.com/markets/funds/coatue-tiger-global-buy-100m-talent-network-braintrusts-tokens-2021-12-09/,"Coatue, Tiger Global","q2gdyi,rotj2h"
Braintrust,8mk3xj,Series B,12/1/2021,100,https://www.reuters.com/markets/funds/coatue-tiger-global-buy-100m-talent-network-braintrusts-tokens-2021-12-09/,"Tiger Global, Coatue","rotj2h,q2gdyi"
Brastorne,g7czmv,Accelerator,,0.5,https://igrownews.com/2022-ayute-africa-challenge-announces-winners-thriveagric-digicow-and-brastorne-enterprises-to-receive-usd-1-5-million-in-grants-and-expert-support/,Thrive,fbtzpi
Brastorne,g7czmv,Accelerator,5/1/2022,0.1,https://www.brastorne.com/blogs/brastorne-connects-the-unconnected-in-drc,Google,yont93
Brastorne,g7czmv,Accelerator,9/1/2022,0.25,https://www.bwtechzone.com/2022/09/brastorne-enterprises-wins-250000.html,MIT Endowment,7iz9rv
Bware Labs,udxaxs,Seed,5/1/2021,1.2,,"Spartan, Ascensive, GBV, MorningStar","pgoyl5,bp637k,rlo5x9,k9u90q"
Bware Labs,udxaxs,Series A,2/1/2022,6,https://www.accesswire.com/689805/bware-labs-raises-6m-in-series-a-funding-round-to-boost-blockchain-api-infrastructure,"Hypersphere, Infinity, Woodstock, Figment, Axia8, CoinGecko, Nexo, Connext Financial, Kosmos, Impossible Finance, Nabais, Aventures, Subsquid, Stakeborg, Spartan, Ascensive, GBV, MorningStar","vkntey,rrtsc3,2wn9ev,uwuv2v,ajbv45,uwgwnq,7vmgv2,xiwarw,9p60sa,ixk61j,f0xcpi,ue6j4s,gdar4n,qnjxzd,pgoyl5,bp637k,rlo5x9,k9u90q"
Cedalio,w0adea,Preseed,8/1/2022,,,"Diaspora, Rebel, Ripio, YC","8krsge,eofkvo,g0e1qt,1r0cdr"
Ceramic,ancy5d,Seed,6/1/2019,2.5,https://techcrunch.com/2019/06/26/Web3 Capital-platform-3box-raises-seed-to-bring-back-control-of-user-data/,"Placeholder, Consensys, Venrock, Northzone, Coinfund","bku3ew,p7lpx4,wnkupi,hne3si,szfiug"
Ceramic,ancy5d,Series A,2/1/2022,30,https://www.coindesk.com/business/2022/02/16/Union Square-multicoin-lead-30m-raise-for-3boxs-ceramic-data-network/,"Multicoin, Union Square, Figment, Coinbase, DCG, Protocol Labs, StreamingFast, Warburg Serres, The Fintech, Ambush, Reciprocal, Bitscale, Calm, Red Beard, 6th Man, Underscore, Variant, Hashed, Aria Emiko, Zee Prime, Page One, Cyber.Fund","2g0699,vuz4in,uwuv2v,73opsz,apd14v,ti312b,2acydu,gduv1m,0o9uby,w5c605,bmsbeq,2tgqti,hamhvv,6cp8be,hol96b,gf4mkp,ubuz3j,ja2261,g5bi1d,urug6u,1g74jp,ho4zrz"
CESS,qdkzic,Series A,1/28/2023,8,https://cointelegraph.com/news/decentralized-storage-platform-cess-raises-8-million-13-vc-funds,"HTX, Infinity, DWF, Mentha, Vespertine, Web3 Capital, Singchain Investment, 7 O'clock, SolrDAO, FishDAO, One Block, Winkrypto, Polkadot","sz5akr,rrtsc3,i98114,qixq0l,nj1v3c,pvr738,a4jf5o,z2j0xs,g5adzv,ncaski,4eyql6,6m0hgx,7ligqu"
ChainML,ae73hb,Seed,05/13/2024,6.2,https://twitter.com/theoriqai/status/1790090952637337852,"Hack, Foresight, Inception, HTX, Figment, Hypersphere, Alumni, NxGen, Antalpha, Newtribe, Stateless, Bitscale, Hash#CIB, IOSG, LongHash, Hashkey, SNZ, ChainLink, Construct, John Fiorelli","a3mqq8,uktppp,s4jf02,sz5akr,uwuv2v,vkntey,4bc5rd,rgk0ot,3t6j16,65epfb,p663q8,2tgqti,yoijyl,i1x9du,po8xe3,nxzb7m,wu15kr,dsl20s,5bnlru,tc6q3y"
ChainML,ae73hb,Seed,11/1/2022,4,https://www.theblock.co/post/173081/decentralized-machine-learning-protocol-chainml-raises-4m-led-by-iosg-ventures,"Alliance, Hashkey, IOSG, LongHash, NxGen, SNZ","7ygqh2,nxzb7m,i1x9du,po8xe3,rgk0ot,wu15kr"
CharacterX,06sxnp,Seed,1/1/2024,2.8,https://www.finsmes.com/2024/01/characterx-raises-2-8m-in-seed-funding.html,"Lightspeed, INCE, Spark Digital, CGV FoF, ZC, GRI, Fermion, 84000LP, Fan Zhang","rwhpsx,cnyjaq,pyukl2,xml0tr,o5of0s,muiz99,c0nqis,cuzsxp,b5zlwp"
cheqd,o6gk4u,Seed,9/1/2021,2.6,https://cheqd.io/blog/cheqd-raises-2-6-million-to-drive-the-uptake-of-digital-ids/,"3GR, Accelerate Web 3.0 Labs, Bixin, BlockUnify, Blockwall, Bluenode, CMCC Global, Dion, DoublePeak, Efiko, Evernym, Exnetwork, Factblock, Future Now, Grizzly, Hidden Muse, Ignite, Kredit, SkyVision, Tendermint, TitanBlock, Torque, Outlier","e4xh6i,ept6x8,gun7y3,k2hev4,n01vko,91420f,l70dye,ddz0bc,18l8yx,xznxug,cn32xf,xx442f,2o1qgx,ivz32u,6oicpo,q6o5fc,c9dgeq,50jszy,5o347p,8n2fw1,oxft8q,kic36s,vjpj24"
Cindicator,cor8db,Preseed,8/1/2017,0.3,,"100&100, Bridge Link, Igor Shirokov, Meta, Mikhail Stepan, WolfEdge, GenerationS, Eugene Marinelli, Julian Zegelman, Nikolai Belykh","bv2lun,984ydi,vekler,d0vr1s,u73vtf,o6u62z,e3clcz,4nzcwa,8kw5cu,wpsmos"
Cindicator,cor8db,Seed,10/12/2017,15,https://icodrops.com/cindicator/,,
Clique,redik6,Seed,10/01/2022,3,https://twitter.com/Clique2046/status/1582191761526775808,"GGV, Qiming, Alliance, Infinity Crypto, Mirana, Sky9, SNZ, Mask Network, Formless, Smrti Labs, DWeb3, Tess Ventures, SevenX","yirgyu,drbv40,7ygqh2,870le2,8rcqvw,m5cayq,wu15kr,thxgaw,6ln74n,pt9rpd,qreqzv,lzpnns,pu3yyr"
Clique,redik6,Series A,03/14/2024,8,https://twitter.com/Clique2046/status/1768277734113907127,"Polychain, Robot, Bankless, Cyber.Fund, Offchain Labs, Zero Knowledge, Balaji Srinivasan, Sandeep Nailwal, Santiago Santos, Calvin Liu, Uma Roy, Yi Sun, Sandy Peng, Gabby Dizon, George Lambeth, Scott Moore, Smokey The Bera, Cygaar, ","tqh3bl,eyy236,wvitwb,ho4zrz,55qf14,tm95um,896jil,9e1gk4,ksae6d,isx1ik,3mnnrf,cy0ynk,4pw1n0,aeoxcb,tfkff0,xph9q9,k5cgj5,wj0lqc "
Cluster,lkgf4g,Seed,03/20/2024,,https://twitter.com/ClusterProtocol/status/1770473478350622985,Pivot,i8a5lw
ColdStack,dka3hq,Preseed,3/1/2021,0.6,https://medium.com/coldstack/coldstack-closes-first-investment-round-with-leading-blockchain-vcs-47036cd991ed,"AlphaChain, Ankr, AU21, Block Dream, BlockGroup, Digital Finance, Drops, GBV, Genblock, Istari, JRR, Kenetic, MorningStar, OKX, Paribus, Particle XYZ, Prom, Solidity, Spark Digital, Stacking Ventures, Staked.vc, Tenzor, Vendetta, X21","xnheko,yxetck,xmw0ev,iqk4zz,v9u6c9,r2lof0,lrxdc8,rlo5x9,5dsvsj,o2fphw,z2pfjb,micofj,k9u90q,smqwtv,r4wukp,i2jpqr,8z2gqj,kw5h0p,pyukl2,yzjb8p,eud02c,52fjgj,nwl5v7,brmebh"
Connect3,hxfsp3,Preseed,6/1/2022,,https://medium.com/metaweb-vc/connect3-announces-strategic-investment-from-metaweb-ventures-c1a1ddb48294,"Big Brain, Cogitent, MetaWeb, Newtribe, No Limit, NEAR","4l8mmr,bxcu1r,fh8wrd,65epfb,agwzs7,b6vnn8"
Coral,pwn1js,Seed,11/1/2023,3,https://twitter.com/MyCoralApp/status/1729111661821497641,TeaLink,0egscq
Cortex Labs,pd82aa,Seed,4/1/2020,4,,"Arrington, ASB, BITMAIN, BitValue, Bixin, Blockchain Capital, BlocTech, BTX, Ceyuan, Connect, Continue, Dekrypt, DFund, DHVC, Du, FBG, Fundamental Labs, Global Blockchain, Hayek, Huobi, IOSG, Jove, Kenetic, LinkVC, Metropolis, Nirvana, OK Group, Origin, ZhenFund, ZMT","csfyvy,7ntjyp,v8hv28,2f68vj,gun7y3,te4xtz,is950u,addxil,0wramd,l0ve70,2ckrz9,6jj8ov,ymnjdr,772xwk,c94bgn,lfbmt3,n5z0zx,u13una,fc4tet,t7xkdd,i1x9du,pm15uy,micofj,9205ui,ecuh5g,kzsrt6,netvyb,j36zoh,ffz00y,xemx4j"
Covalent,cfxf9v,Seed,10/1/2020,3.1,https://finance.yahoo.com/news/ethereum-data-analytics-startup-covalent-160010982.html,"1kx, AU21, Brilliance, CoinGecko, Etienne vantKruys, Mechanism, Spark Digital, Woodstock, Victory Square","bspyld,xmw0ev,zqdy3j,uwgwnq,rwthif,ulvyo3,pyukl2,2wn9ev,5qyd32"
Covalent,cfxf9v,Seed,3/1/2021,2,https://www.coindesk.com/markets/2021/03/24/decentralized-data-project-covalent-raises-another-2m/,"Almora, Bellhip, Binance, Bison, Black Venture, BlackDragon, Chorus One, Coinbase, Creative Destruction Lab, CSP, DeltaHub, Evangelion, Felicis, Figment, Hashed, High Naut, Hypersphere, LedgerPrime, MorningStar, ZBS","spurmc,r000x8,mrgeec,puuj5e,eq77bg,8nclhv,la4mmt,73opsz,6erxyq,6hezki,35e9e6,xeklhm,bu5d49,uwuv2v,ja2261,33rsis,vkntey,zzypcf,k9u90q,0nsbs7"
Crewdle,zy7wfi,Seed,10/1/2021,2.15,https://betakit.com/crewdle-raises-2-15-million-to-make-video-conferencing-environmentally-friendly/,Anges Québec,j8kxto
Croquet,pl7b4k,Seed,8/1/2022,4.8,https://venturebeat.com/business/croquet-makes-it-possible-to-put-hundreds-of-players-into-web-based-multiplayer-action/,"ARKN, SIP, SPATIAL","ii5tnv,2ms2ep,rv0fmm"
Cryptosat,9agce6,Seed,10/1/2022,3,https://www.cointime.ai/flash-news/cryptosat-raises-3-million-to-launch-satellite-into-space-for-bulletproof-cryptography-88157,"at.inc, Follow [the] Seed, GoAhead, HackerLink, Inflection, Matt Pauker, Protocol Labs, Cleo, Bitfwd, Paka","h4v7bw,5qx1w8,7klad7,22saty,e7om6t,2rpeeh,ti312b,5wgx9l,wxro8b,tnkrzw"
Cudos,jitkjs,Series A,8/1/2022,13,https://www.cudos.org/blog/cudos-raises-10million-in-funding/,"Moonrock, GBV, Spincrypto, Coinvision, Blackdragon, Moonwhale, Outlier, DoublePeak, Psquare, CSP, Crypto Snack, Exnetwork, DuckDAO, Brilliance, BMW, Floem","n73vnt,rlo5x9,knx4ht,usw204,8nclhv,dd123i,vjpj24,18l8yx,sjvt2e,6hezki,rvvd5u,xx442f,yi5hs8,zqdy3j,gtjd6o,0y66ov"
d.id,4giuvo,Seed,5/1/2020,13.5,https://www.startuphub.ai/investment_rounds/d-id-raises-13-5-million-series-a/,"Hashkey, Nervos, SevenX, SNZ","nxzb7m,32r0cm,pu3yyr,wu15kr"
d.id,4giuvo,Series A,8/1/2022,13,https://www.cypherhunter.com/es/e/did-id-raised-funding-2022-08-15/,"SNZ, Hashkey, Google, Gsr, CMB International, QingSong","wu15kr,nxzb7m,yont93,v81ftp,lx2am7,nak7b7"
D3,6y7ind,Seed,9/1/2023,5,https://www.theblock.co/post/249236/shima-capital-backs-domain-name-startup-d3-global-in-5-million-round,"Arthur Hayes, C Squared, Dispersion, Infinite, Kestrel0x1, Lightshift, MZ Web3, Nonagon, Paul Stahura, Shima, VentureSouq","7job29,h97beq,9oo0xs,fxmvug,3wmu8j,tf8yn4,asmbxg,huo2cs,aowm9c,lhs5s8,wzua9l"
Daylight,3lfveq,Seed,5/1/2022,4.2,https://www.businesswire.com/news/home/20221117005401/en/Anode-Labs-Announces-Funding-To-Build-The-React-Network-The-First-Community-Owned-Web3 Capital-Green-Energy-Grid,"Lerer Hippeau, Lattice, VaynerFund, CoinShares, DCG","wkf49g,q9qqsj,jtvliv,skjtm0,apd14v"
dClimate,a5w7th,Seed,4/1/2021,3.5,https://www.prnewswire.com/news-releases/dclimate-raises-3-5-million-seed-round-with-support-from-coinfund-multicoin-capital-and-republic-labs-to-create-the-first-decentralized-network-for-climate-data-301263646.html,"BR, CoinFund, Multicoin, Republic, Carnrite, Climate, Giant, Lightbank, Mark Cuban, Open FieLD, Prithvi, Radical, Sax, Space, SV Pacific, Uush","oi4yuk,szfiug,2g0699,unykak,2enw83,4zunln,1ojs3d,lr20nt,pkboiz,9iw9vx,9rflkn,63huxu,gkv33p,x52ni8,sbxp1t,eseesx"
DeepBrain,c1de2i,Seed,10/1/2017,4.85,https://golden.com/wiki/DeepBrain_Chain-99B85DK,"Gobi, GSR","3wgvij,v81ftp"
DeepSquare,5ymc3k,Seed,12/1/2021,2.5,,"ESC95, Outlier, White Loop","akmu2d,vjpj24,nnrh00"
DeMR,pfd72p,Seed,1/1/2024,,https://coinedition.com/demr-kucoin-labs-first-strategic-investment-in-the-depin-track/,Kucoin,azofz8
DeMR,pfd72p,Strategic/Angel,01/04/2024,,https://twitter.com/DeMR_official/status/1742868910612066684,Kucoin,azofz8
DeMR,pfd72p,Strategic/Angel,03/13/2024,,https://twitter.com/DeMR_official/status/1767791967768125940,"Kucoin, DWF, JDI, Meteorite Labs, Redline, Paka","azofz8,i98114,vzqumt,d85f6i,7rf9rs,tnkrzw"
DePHY,gmxzzx,Seed,16/2/2024,,https://www.theblock.co/post/277656/dephy-secures-seed-funding-round-at-40-million-valuation,"Blockchain Builders, Foresight, IoTeX, Paramita, FutureMoney, Waterdrip, DefinanceX, PAKA, Candaq","94d9pz,uktppp,g4z7os,t3kcho,6c0yfx,o7xcsr,dqrrco,tnkrzw,h3elac"
Digital Gaia,hq0zgu,Preseed,10/1/2022,0.25,,"Cerulean, Aera Force","9jairy,xcxzqk"
Dimitra,18fpn9,Series A,8/1/2022,20,https://www.accesswire.com/717548/dimitra-incorporated-releases-dimitra-token-raises-65m-to-accelerate-growth-of-connected-farmer-platform,GEM Digital,m65oq5
DIMO,0wr2ea,Seed,2/1/2022,9,https://www.coindesk.com/business/2022/02/15/coinfund-joins-9m-round-for-digital-infrastructure-incs-bid-to-decentralize-vehicle-data/,"Streamr, Wonder, Lattice, Table Management, Slow, Variant, CoinFund, Stratos Technologies, Lattice, Rick Wagoner, Mark Joseph, Amir Haleem, Kiran Bhatraju, Rohit Gupta, Jake Chervinsky, Mason Borda, Trevor McFedries, Michael Cena, Packy McCormick, Jonathan Levine, Sam Teller, Michael Sena, Ben Jacobs, Austin Green, Zach Ware, Amhed Herrera, James Fayal","er8yvb,xk2j4b,q9qqsj,twnyql,ooq1d1,ubuz3j,szfiug,3c4o3d,q9qqsj,qcisd1,f3ofqn,6xvdkx,kdz1ka,eh4ivf,fwm3hf,akhe1r,gwi3em,4x80nx,o2577p,ty4xtv,xiw1r7,pdggb7,kpxn7o,k5yniy,fpfcrh,eu0hym,ofm89h"
DIMO,0wr2ea,Series A,1/1/2024,11.5,https://www.theblock.co/post/272456/decentralized-infrastructure-11-5-million-series-a-coinfund,"CoinFund, Slow, Table Management, Lechuza, Consensys, Borderless, Rick Wagoner","szfiug,ooq1d1,twnyql,ff0uq6,p7lpx4,buo8ql,qcisd1"
DLTEO,byzgll,Accelerator,,,,Science Park Graz,296d7m
Dmail,84v1j0,Preseed,2/1/2022,,,"Dukakis Tejada, Bixin, Black Venture, Daniel James, Draper Dragon, FBG, Hashkey, HG, Nick Myers, Outliers, Paka, Parallel, Spark Digital, Sunny Gar, TsingTing","32xkrh,gun7y3,eq77bg,bjj1gw,caojlf,lfbmt3,nxzb7m,nqkr1o,n5c5of,wf1h0f,tnkrzw,hbepme,pyukl2,3y817d,jofsd4"
Dmail,84v1j0,Seed,7/1/2023,,https://blog.dmail.ai/new-milestone-dmail-closes-pre-a-funding-round/,"Amino, CatcherVC, Gate.io, Kretos, KuCoin, LEAD, OIG, Red Swiss Venture, Vespertine, WAGMi","oq9fz1,ta5llm,i1vs03,ardv2y,azofz8,4fks6v,pxs0xw,5u27gc,nj1v3c,nlvx3r"
dotmoovs,lipfwr,Preseed,5/1/2021,0.84,https://chainwire.org/2021/05/12/dotmoovs-raises-840000-from-strategic-investors-and-partners/,"Ascensive, AU21, Building Blocks, Extra Watts, GBV, HG, MarketAcross, Moonrock, MorningStar, Rarestone, Spark Digital","bp637k,xmw0ev,nmr0ay,qxuz9y,rlo5x9,nqkr1o,p21tot,n73vnt,k9u90q,h9g1s5,pyukl2"
Drife,con8un,Private/Public token sale,04/07/2024,2.5,https://pitch.com/v/drife-pitch-86yv4t/24d3624e-d367-4345-9ae7-0fe81cecb54f,,
Drife,con8un,Seed,04/07/2024,2,https://pitch.com/v/drife-pitch-86yv4t/24d3624e-d367-4345-9ae7-0fe81cecb54f,,
Drife,con8un,Seed,7/1/2021,2.7,https://www.prnewswire.com/news-releases/drife-closes-2-7mm-in-venture-token-funding-30x-oversubscribed--plans-ido--uniswap-listing-on-aug-6th-301337032.html,"Master, GD10, AU21, Titans, FBG, Master","ka4f30,okjrd0,xmw0ev,xxi1ub,lfbmt3,ka4f30"
Dtravel,37xksc,Seed,2/1/2024,,https://ca.finance.yahoo.com/news/dtravel-receives-backing-borderless-capital-202000677.html,Borderless,buo8ql
DTravel,37xksc,Seed,6/1/2021,5,https://www.travolution.com/news/travel-sectors/accommodation/travala-com-raises-5m-to-launch-home-sharing-blockchain-platform-dtravel/,"AU21, DHVC, Extra Watts, Future\Perfect, GBV, Ghaf, Kenetic, LD, Momentum 6, NGC, Old Fashion, Plug and Play, PLUTUSVC, Union Square, Shima, DWF, Northbund, VC Travel","xmw0ev,772xwk,qxuz9y,1labbf,rlo5x9,jcbbxl,micofj,qqc9zd,bah2fw,07pxi6,ukwp87,w19rhh,hazkhs,vuz4in,lhs5s8,i98114,wfcztc,u2j4by"
EARNM,glylqg,Private/Public token sale,,1,https://cryptorank.io/ico/earnm,,
Eclipse,dgqlyo,Preseed,09/27/2022,6,https://www.coindesk.com/business/2022/09/27/blockchain-infrastructure-project-eclipse-raises-15m-to-build-universal-layer-2/?outputType=amp,"Polychain, Polygon, Tribe, Accel, Galileo, The House Fund, Tabiya","tqh3bl,8agdnp,due5zk,idlbd7,cznutg,320gnu,oc50nt"
Eclipse,dgqlyo,Seed,09/27/2022,9,https://www.coindesk.com/business/2022/09/27/blockchain-infrastructure-project-eclipse-raises-15m-to-build-universal-layer-2/?outputType=amp,"Tribe, Tabiya, Infinity, CoinList, Struck, Soma","due5zk,oc50nt,rrtsc3,bfs2r3,n0wdkb,rgrylg"
Eclipse,dgqlyo,Series A,03/11/2024,50,https://www.coindesk.com/business/2024/03/11/blockchain-builder-eclipse-labs-raises-50m-ahead-of-layer-2s-mainnet-debut/,"Polychain, Delphi Digital, Fenbushi, Maven 11, Hack, Placeholder, DBA","tqh3bl,67mqz0,mywjsu,xgzede,a3mqq8,bku3ew,0tsmyr"
Efani,w1b0je,Seed,1/1/2021,2.5,https://www.bizjournals.com/sacramento/inno/stories/news/2022/01/17/efani-smartphones-hackers-crypto.html,"Ali Moiz, Cindy Bi, Elizabeth Yen, Joe Levy, Matthew McDonald, MCMA, Visary","bqjhhg,stpica,uzt9g9,66zxk8,o4h84m,yixidg,xt0vj3"
ELOOP,c0u4u3,Seed,5/1/2022,1.2,https://superangels.club/eloop-raised-new-million-investment/,"Andreas Ivanschitz, C&P Immobilien, Christian Trummer, European Super Angels Club, Venionaire, W3, The Sharing Group, Lucky Car","465enh,t6e1va,ni2m14,zd61np,hvyw00,efovez,jdvxvj,x5uack"
EMC,2l10iw,Strategic/Angel,01/26/2024,,https://medium.com/@EMCProtocol/ai-depin-project-emc-lands-multi-million-dollar-investment-f267a4257c71,"Future3 Campus, Bochsler Finance","c9uxrr,2oxiby"
Energy Web,tjcjjf,Accelerator,8/1/2017,16.5,,"Centrica, Elia Asset, Equinor, Sempra Energy, Shell, SP Group, Stedin Holding, Tokyo Electric","lepbce,91clzc,u31dfa,iwjz17,mm4b9e,u5hmsf,s9wgrj,d0s5nk"
Energy Web,tjcjjf,Preseed,1/1/2018,,,"BaseTech, Chateau Crypto, Peak Sustainability, Token, Blockchain Capital, Radicle Impact, Vito, Innogy, UPC, Google","d3piby,mkgpcb,76or7t,6dsjxk,te4xtz,xrr9h9,puhefe,0127i5,id32lg,yont93"
Entangle,upuriv,Private/Public token sale,02/20/2024,1.45,https://cryptorank.io/ico/entangle,,
Entangle,upuriv,Seed,01/09/2024,4,https://twitter.com/entanglefi/status/1744751372455784817,"Big Brain, LaunchCode, iVerse Vision, LBank Labs, Skynet EGLD, Cogitent, Faculty, Seier, 1NVST, Sharding, Agnostic, Castrum, NxGen, MH, Contango, Crypto Times, Owl, ","4l8mmr,qzpg6s,wtzat2,89glxu,5fmqrb,bxcu1r,k1qvmn,o84ukt,56gubq,jn38nx,eq458r,xilrw4,rgk0ot,b04x9g,2bl1fj,tuxed4,ijkuvo "
Entangle,upuriv,Strategic/Angel,03/18/2024,,https://cryptorank.io/ico/entangle,ConsenSys,p7lpx4
Entheos,0if1hs,Seed,6/1/2023,,,"186 Ventures, Avalanche, Monoceros","wb49st,abvcou,566vlr"
EpiK,0lasch,Seed,4/1/2021,8,,"7 O'clock, Arcanum, CatcherVC, ChainUP, ChinaNet, Collinstar, Consensus Lab, Crypto Ventures, FBG, Gleneagles Securities, JackDaw, K24, Lancer, Nebulas, RedBlock, Spring, SuperChain","z2j0xs,m8rgyb,ta5llm,q8nh5s,2zbjm7,dstkk5,hxmvxz,r2w61y,lfbmt3,k4kgrp,d752i2,pj4b1s,3wlhk2,zrv0uy,ik81jg,z1jqg1,mej3v6"
EtherMail,hoaz0e,Preseed,7/1/2022,3,https://www.prnewswire.com/news-releases/ethermail-raises-3m-in-seed-round-funding-from-top-vcs-fabric-and-greenfield-one-to-enable-anonymous-wallet-to-wallet-email-communication-to-200-million-users-worldwide-301603710.html,"Fabric, Greenfield, Rene Reinsberg","4x7qfo,wir0cg,qmxifm"
EtherMail,hoaz0e,Seed,3/1/2023,4,https://www.theblock.co/post/217761/tim-draper-joins-ethermails-advisory-board-leads-4-million-raise,"Draper Associates, Celo, Stake, MS&AD","uwmmpg,q8to28,hcdvrk,uv5644"
Ethstorage,2kn4hu,Seed,7/1/2023,7,https://www.cryptotimes.io/ethereum-layer-2-rollup-ethstorage-raised-7m-in-seed-round/,"Avant Blockchain, Cloud Nine, dao5, DragonRoark, Foresight, FutureMoney, Galxe, Gate.io, Geekcartel, Rebase D., SevenX, Sky9, Vitalbridge, W3.Hitchhiker","0bp83l,4huuqd,r54jbx,bnzukt,uktppp,6c0yfx,geps91,i1vs03,7zxuth,7xtp3e,pu3yyr,m5cayq,r57gpz,mo34ru"
everVision,zr5vzn,Preseed,5/1/2021,1,,"A&T, Arweave, D1Ventures, Digital Renaissance, DODO, Hashkey, Hongbo Tang, Mask Network, Mingda Lei, OKX, SevenX, Big Brain, Hash Global, Huobi","1zgufc,hhudw8,m6mz4i,b1hrk6,zirsty,nxzb7m,b5zicz,thxgaw,jhl62h,smqwtv,pu3yyr,4l8mmr,us9d7q,t7xkdd"
Everyworld,si0rd5,Series A,03/22/2024,,https://twitter.com/JoinEveryworld/status/1771252264985915682,"Andreessen Horowitz, Hashed, Dragonfly, Coinbase, Animoca, Lightspeed, Sfermion, Griffin Gaming, Foresight, IOSG, NGC, Inception, Pillar, Neon, Liberty City, Galaxy Interactive, Brevan Howard, ","26x5nn,ja2261,5tj4jx,73opsz,gjt0lb,rwhpsx,emg882,wvda7j,uktppp,i1x9du,07pxi6,s4jf02,iedbk8,lhs7r5,f0g01v,nlqu6w,q2goo9,"
Exabits,ks1fra,Preseed,6/1/2023,0.3,https://twitter.com/exa_bits/status/1753121707806826800,"Outlier, Valkyrie, Protocol Labs, Big Brain, Outlier, Blockchain Builders, Plassa, Taisu, Fortified, LBank Labs, Paramita, Moonhill, IoTeX","vjpj24,9cx2zp,ti312b,4l8mmr,vjpj24,94d9pz,loynnk,5nt3w6,aju8zg,89glxu,t3kcho,yh3lfl,g4z7os"
EYWA,tbwx5g,Preseed,1/1/2022,0.27,,"Coinex, Algorand, Aurora, Bobas Network, Harmony One, NEAR, Big Brain, BR, Criterion, DDAO Hunters, Droid, G1, InnMind, JI, Kondr, Mapleblock, Metis, Mulana, Polygon, RSquad, Supra, Unreal, Vespertine, Xtream","4sf6wm,s7b833,tvu1r6,pd9gca,curksv,b6vnn8,4l8mmr,oi4yuk,6uuq9l,tpcj7y,mlynhb,mar9ip,t6uue7,gw5y68,jzrat5,tzyxtr,vu9glf,4dh0t9,8agdnp,wvcovb,u8r7ah,onzcv5,nj1v3c,ms8eng"
EZ WiFi,oazct0,Preseed,1/1/2023,0.17,https://profit.pakistantoday.com.pk/2022/01/12/ezwifi-raises-six-figure-amount-in-pre-seed-funding-as-it-gears-up-internet-sharing-service/,"Deosai, Techstars, Naeem Zamindar","sk71ns,a1uyxq,0vb3rq"
Fanztar,94944x,Preseed,5/1/2022,0.65,https://economictimes.indiatimes.com/tech/funding/Web3 Capital-creator-monetisation-platform-fanztar-raises-rs-5-crore-in-funding-led-by-india-quotient/articleshow/91510305 Ventures.cms?from=mdr,"Ankush Sachdeva, Bhanu Singh, India Quotient, Manohar Charan, Mohammad Ahsan, Sarthak Misra, Tarsame Mittal","pzuset,b4hh7p,t0xroa,314d7e,6wvtuq,k2rg6s,3bbg75"
Fetch.ai,mhpovr,Seed,3/1/2021,5,https://www.coindesk.com/markets/2021/03/10/fetchai-nabs-5m-in-institutional-investment-fireblocks-to-add-support-for-fet-token/,"Fireblocks, GDA, GDA, Next","1kptr4,dm8n2p,dm8n2p,948drp"
Fetch.ai,mhpovr,Seed,6/1/2018,15,https://www.cypherhunter.com/zh-hans/e/fetch-ai-raised-funding-2018-06-11/,"Asteroid, CODELTA, Spark Digital, BlockWall, Signal, Visionz, Lemniscap, Outlier","fj88qi,oy2wzi,pyukl2,n01vko,44u6gg,h3j1gl,kjm7ph,vjpj24"
Fetch.ai,mhpovr,Series A,3/1/2023,39.2,https://www.coindesk.com/business/2023/03/29/ai-focused-crypto-protocol-fetchai-raises-40m-to-deploy-decentralized-machine-learning/,"Asteroid, DWF, KOI","fj88qi,i98114,3krjgm"
Fetch.ai,mhpovr,Series A,3/1/2023,40,https://www.coindesk.com/business/2023/03/29/ai-focused-crypto-protocol-fetchai-raises-40m-to-deploy-decentralized-machine-learning/,DWF,i98114
Fetch.ai,mhpovr,Series A,4/1/2023,10,https://cointelegraph.com/news/bitget-pledges-10m-for-fetch-ai-ecosystem-amid-chatgpt-boom,Bitget,o3xe28
Fetch.ai,mhpovr,Series A,4/1/2023,10,https://cointelegraph.com/news/bitget-pledges-10m-for-fetch-ai-ecosystem-amid-chatgpt-boom,Bitget,o3xe28
Filebase,ush02g,Seed,3/1/2021,2.01,https://www.datanami.com/this-just-in/filebase-raises-2m-led-by-multicoin-capital-to-unify-decentralized-storage-networks/,"Multicoin, Ryan Selkis, Version One","2g0699,6iy81o,9kybya"
Filecoin,r1uv9t,Seed,5/1/2016,3.73,,"DCG, Working, Hard Yaka, Haystack, BlueYard, Union Square, StartX, FundersClub, Blockchain Capital, Notation, Boost, Jaan Tallinn, DHVC, Sam Altman, Semil Shah, Fred Ehrsam, Dylan Field, Naval Ravikant, Vinny Lingham, Nebari, Winklevoss, YC","apd14v,hmrrh1,9n4okv,ujjw80,jo973z,vuz4in,rnj4da,bb4qnj,te4xtz,t105wi,94mx0d,ccfk2o,772xwk,zp05qw,a7c1uh,2sc5z5,48kg9t,co49ki,natuqc,7fql0t,3amt6k,1r0cdr"
Filecoin,r1uv9t,Series A,9/1/2017,257,https://www.coindesk.com/markets/2017/09/07/257-million-filecoin-breaks-all-time-record-for-ico-funding/,"Sequoia, a16z, Union Square, Genblock, SNZ, TrueWay, Bitrise, Metaplanet, DoublePeak, Waterdrip, E-Merge, Staked.vc, Draft, Knickerbocker, Cipholio, Moonwhale, Magnetic, Ausum, Referent, Skywater, Mint, ArkStream, Polychain, Graycell, Gravity, Cognitive Blockchain, Cluster, R2, IOSG, Greg Kidd, Meg Nakamura, Charles Songhurst, Blocktech, Vinny Lingham, Lattice, NGC, Qwerty, Fantail, FJ Labs, Continue, Inflection, Northbund","vf0qg4,d40or5,vuz4in,5dsvsj,wu15kr,x31uoh,h2tvqq,lszufu,18l8yx,o7xcsr,x14dla,eud02c,vuhvkv,eg9pp3,ri09e0,dd123i,ujk97b,8m8hfx,tcaja1,3jk0fl,po1oia,zloyr1,tqh3bl,ckjv3m,bqmpxo,tuqdxz,vax8ny,wskgqw,i1x9du,08hz7d,bpkrxo,saw27c,b3o7lp,natuqc,q9qqsj,07pxi6,g72mqv,7zvtvf,h58ujg,2ckrz9,e7om6t,wfcztc"
FileStar,h7mk5k,Seed,1/1/2021,5,https://www.nasdaq.com/articles/hashkey-capital-co-invests-%245m-in-decentralized-storage-project-filestar-2021-01-12,Hashkey,nxzb7m
Fileverse,gtzdge,Seed,10/1/2023,1.5,https://www.coindesk.com/business/2023/10/17/Web3 Capital-powered-file-management-app-raises-15m-to-offer-alternative-to-google/,"Gnosis, Factor, Safe, Mask Network, Galxe, Arweave, Forward Research, DiVentures, West Ham, Daedalus, Formless, Waterdrip, Balaji Srinivasan, Kenzi Wang, Eleftherios Diakomichalis","5aftnd,rmj9ht,nkdgv1,thxgaw,geps91,hhudw8,7hwz6f,d8ocj0,xtbe5p,ynh9fg,6ln74n,o7xcsr,896jil,wohqmd,b9dhtc"
FilSwan,v3ycrj,Seed,1/1/2023,3,https://www.prweb.com/releases/filswan-raises-3m-usd-to-revolutionize-amp-simplify-building-dapps-899321300.html,"Binance, SNZ, Waterdrip, FBG, Protocol Labs, Unicorn Hunter, Chain, LD, The Cabin, Betterverse Dao, Kondr, Filecoin, Chainlink","mrgeec,wu15kr,o7xcsr,lfbmt3,ti312b,rewcp7,0msybz,qqc9zd,ret0us,st9kcn,jzrat5,drdidh,dsl20s"
Firstbatch,xjzev4,Preseed,6/1/2022,,,"Arweave, Cem Kozinoglu, Foresight, QNB, Sam Lang, Signum, Hansa Network","hhudw8,fzd0ha,uktppp,10z6rb,e29e8f,oltsrb,68e0bl"
Fission,dkaff9,Preseed,8/1/2019,0.4,,"Lance Tracey, Lanebury Growth, Outlier","837q2c,3vlmii,vjpj24"
Fission,dkaff9,Seed,11/1/2022,5,,"Artichoke, BlueYard, Fenbushi, Figment, Huobi, Protocol Labs, Samsung NEXT, Consensys","e3qzk9,jo973z,mywjsu,uwuv2v,t7xkdd,ti312b,1im0oz,p7lpx4"
Flare,8u08fw,Seed,08/06/2021,11.3,https://decrypt.co/73008/flare-network-raises-11-3m-in-funding-round-with-kenetic-dcg,"Kenetic, DCG, LD, CoinFund, Genesis, Borderless, Wave, New Form, cFund, Backend, Do Kwon, Charlie Lee, ","micofj,apd14v,qqc9zd,szfiug,5lwado,buo8ql,v6xlk7,zww7l5,l0z3fx,m9zsej,li943w,o26rsd"
Flare,8u08fw,Series A,02/24/2024,35,https://www.coindesk.com/business/2024/02/23/layer-1-network-flare-raises-35m-from-kenetic-aves-lair/,"Kenetic, Aves Lair","micofj,juclgr"
Flare,8u08fw,Strategic/Angel,01/11/2019,,https://thepaypers.com/news/ripples-xpring-strategically-invests-in-flare-networks--1239453,Xpring,oeekp6
Fleek,7f3dsw,Series A,12/1/2022,25,https://techcrunch.com/2022/12/01/Web3 Capital-developer-platform-fleek-raises-25m-led-by-polychain-capital/,"Polychain, Coinbase, DCG, Protocol Labs, Arweave, North Island, Distributed Global, The LAO, Argonautic","tqh3bl,73opsz,apd14v,ti312b,hhudw8,f87dvf,sknhsa,e2dh7y,cdmyso"
Flock,ruqwx5,Seed,03/24/2024,6,https://twitter.com/flock_io/status/1773350443235545200,"Faction,Tagus, DCG, OKX, Volt, Inception, ","7tqz0l,oqc7x3,apd14v,smqwtv,gasfop,s4jf02"
Flock,ruqwx5,Seed,03/28/2024,6,https://www.theblock.co/post/285181/web3-ai-training-firm-flock-raises-6-million-in-seed-funding,"Lightspeed, Tagus, DCG, Volt, OKX, Inception, Kenzi Wang","rwhpsx,oqc7x3,apd14v,gasfop,smqwtv,s4jf02,wohqmd"
Fluence,ul9uzl,Seed,6/1/2018,,,"1kx, 8 Decimal","bspyld,2q8xba"
Fluence,ul9uzl,Series A,2/1/2022,9,https://decrypt.co/93090/cloud-9-million-fluence-labs-raises-cash-aims-liberate-Web3 Capital-aws,"Alameda, Arweave, Multicoin, OP Crypto, Polymorphic, Protocol Labs, Reframe, Signum, StreamingFast, Tiger Global, UOB, Hard Yaka","b5zojp,hhudw8,2g0699,9qbjjp,hepzxq,ti312b,tki9vm,oltsrb,2acydu,rotj2h,bix4ir,9n4okv"
Foam,olxxfj,Series A,8/1/2018,16.5,https://www.coindesk.com/markets/2018/09/13/foam-is-live-decentralized-world-map-launches-on-ethereum/,"Distributed Global, KR1, Starchain, Cyber.Fund, Johnny Steindorff, Placeholder","sknhsa,ujw2s3,igcvay,ho4zrz,vaig4c,bku3ew"
Fog Works,aqg014,Seed,8/1/2022,3,https://www.finsmes.com/2022/08/w3-storage-lab-raises-3m-in-pre-seed-financing.html,"Draper Dragon, Lingfeng, Lingfeng, OKX","caojlf,6q7dh3,6q7dh3,smqwtv"
Foundry,9ngp9i,Series A,03/21/2024,80,https://twitter.com/mlfoundry/status/1770800183426629894/photo/1,"Sequoia, Lightspeed","vf0qg4,rwhpsx"
Freatic,php632,Seed,9/1/2023,3.6,https://unchainedcrypto.com/a16z-leads-3-6m-fundraise-for-crypto-firm-freatic/,"Anagram, a16z, Archetype, Arweave, Jutta Steiner, MacLane Wilkison, Meltem Demirors, Not3Lau, Robot, Stefano Bernardi, Stephane Gosselin","fahk60,d40or5,ze1wdg,hhudw8,zbwc1y,z9ht3t,ivtzio,jimmh7,eyy236,uita3x,kpp3he"
FX Land,4z5caf,Seed,1/1/2022,1.1,https://www.newswire.ca/news-releases/functionland-raises-1-1m-in-seed-funding-830473543.html,"Outlier, Protocol Labs, Master, Delta Blockchain","vjpj24,ti312b,ka4f30,drq7a8"
GaiaNet,wg92va,Seed,05/01/2024,10,https://x.com/Gaianet_AI/status/1795466736097268050,"ByteTrade, Mirana, Mantle, EVM, Brian Johnson","ptzfrs,8rcqvw,nnv6q8,kvs8ga,y8mmkj"
GamerCoin,z2gapv,Preseed,7/1/2018,0.27,,i systems,y2bxy5
Gelato,lvwe8x,Seed,9/1/2020,1.2,https://finance.yahoo.com/news/gelato-network-raises-1-2-140117420.html,"Christoph Jentzsch, D1Ventures, Galaxy Digital, Gnosis, IOSG, MetaCartel, Ming Ng","04dk8s,m6mz4i,44e83n,5aftnd,i1x9du,oxjxo0,5z7w9l"
Gelato,lvwe8x,Series A,9/1/2021,11,https://www.coindesk.com/business/2021/09/30/gelato-raises-11m-as-smart-contract-automation-market-heats-up/,"6th Man, Bloccelerate, Blue7, Dragonfly, Hack, IDEO CoLab, Nascent, ParaFi, Staking Facilities, Stani Kulechov, Zeuth, The LAO, IOSG","hol96b,ykzwbk,wxcf8r,5tj4jx,a3mqq8,l7sko2,gnhylz,6f2cxt,gmkv01,3bchmx,mwx1nm,e2dh7y,i1x9du"
Genomes.io,lfu9ni,Series A,8/1/2023,20,,"GEM Digital, Igniter100","m65oq5,st9ohk"
GEODNET,scli9r,Seed,28/2/2024,3.5,https://twitter.com/geodnet_/status/1762832718327361794,"North Island, Borderless, Modular, Road, Tangent, Santiago Santos","f87dvf,buo8ql,p99cdg,oygqys,6fx6k3,ksae6d"
Geodnet,scli9r,Seed,7/1/2023,1.5,https://medium.com/borderless-capital/borderless-leads-a-1-5m-investment-into-geodnet-to-bring-high-accuracy-positioning-to-the-masses-ccd2c1b9ce97,"Borderless, Modular","buo8ql,p99cdg"
Geodnet,scli9r,Strategic/Angel,04/16/2024,2,https://twitter.com/GEODNET_/status/1780236105314378164,"CoinFund, Pantera, VanEck, Santiago Santos, ","szfiug,ozeg73,pzv0z5,ksae6d"
GIANT,jl19aq,Accelerator,8/1/2018,,,"Argonautic, gumi Cryptos, Tata, Berkeley Xcelerator, Bronco Venture","cdmyso,y5m26s,59bitg,yva82n,k97gry"
GIANT,jl19aq,Seed,12/1/2021,5,https://www.businesswire.com/news/home/20211216005703/en/GIANT-Protocol-Raises-5-Million-Seed-Round-Led-by-CoinFund,"Blockchange, CoinFund, Entheos, Transpose, Wireless Broadband Alliance","hbpmm3,szfiug,r5e7lg,uzfw6p,60xzyd"
GitPOAP,2fl69i,Seed,4/1/2022,4.28,https://www.prnewswire.com/news-releases/gitpoap-raises-over-4-2-million-usd-in-seed-funding-to-memorialize-professional-contributions-and-accomplishments-as-blockchain-based-badges-301608123.html,"Anthony Sassano, Avalanche, Balaji Srinivasan, Inflection, Libertus, Mariano Conti, POAP, Protocol Labs, Superphiz","cd2nay,abvcou,896jil,e7om6t,sk9qn6,mlsidm,3xs22l,ti312b,3j2gta"
Giza,nlkbyo,Seed,7/1/2023,3,https://www.businesswire.com/news/home/20230711269424/en/Giza-Raises-3M-Pre-Seed-Led-by-CoinFund-to-Bring-Artificial-Intelligence-to-Web3 Capital-Smart-Contracts,"Arrington, CoinFund, Julien Bouteloup, Rand Hindi, StarkWare, TA","csfyvy,szfiug,szeaj0,6wptir,vrsed8,z845oa"
GLIF,mw0azh,Seed,2/1/2024,4.5,https://www.coindesk.com/business/2024/02/06/filecoins-liquid-staker-glif-raises-45m-hints-at-token-airdrop/,"Multicoin, Zee Prime, Dialectic, Big Brain, Fenbushi, Protocol Labs, Mana, FinTech Collective, Vinny Lingham","2g0699,urug6u,s0sfkv,4l8mmr,mywjsu,ti312b,9edg3l,e338ka,natuqc"
Golem,j4istz,Seed,11/1/2016,8.6,https://www.financemagnates.com/cryptocurrency/news/golem-raises-8-6-million-29-minutes-fund-airbnb-computers/,"XDL, G-Force, KR1, CaptureAlpha, FutureMoney, HyperChain, Atopia, Continue, Matthew Slater, Monday, NueValue, Outlier","udcrbv,hbiw3h,ujw2s3,wqn9ms,6c0yfx,gftio8,bwghh0,2ckrz9,u49yhz,j4k67v,n2k3so,vjpj24"
GoQii,tkkrfm,Series A,11/1/2015,13.4,https://yourstory.com/2015/11/goqii-series-a-funding,"Cheetah Mobile, Great Wall Club, Ilkka Paananen, Pravin Gandhi, Smart Start, Kanwaljit Bombra, Madhuri Dixit Nene, Prashant Gulati, Sanjay Vaswani, Vijay Sharma, Deepak I. Shahdadpuri, DSG Consumer, Marco Argenti, Amit Singhal, Bharat Vasan, Esther Dyson, Mahesh Samat, Mike McNamara, Sanjay Parthasarathy, Steven Luczo, Taher Khorakiwala","m745wj,o7js4i,bqhtyc,mzct2x,l8m9rh,d8l3f0,ia1dup,uj1qaf,y7zual,r3tuby,fjd1uy,d5yu3p,3gph14,xv7xuz,egkgd5,dfcg6x,glao82,1qkrxo,bros3l,g2uuo0,r7ef2i"
GoQii,tkkrfm,Series A,11/1/2018,27.9,https://entrackr.com/2018/11/goqii-fund-30-mn-mitsui-co/,"Denlow Trust, Edelweiss, Galaxy Digital, Galaxy Interactive, Gautam Godhwani, Mitsui, Neeraj Arora, Rajan Anandan, Ratan Tata, Sivaramakichenane Somasegar, Vijay Vashee","46w9xn,fygzvo,44e83n,nlqu6w,i88831,5w0u65,2z0nw5,in8thm,n2ixy9,aiiiye,yzkp63"
GoQii,tkkrfm,Series B,9/1/2019,10.5,https://entrackr.com/2019/09/goqii-raises-rs-45-cr-from-bccl/,"Akshay Kumar, Anil Godhwani, Bennett Coleman, Brand, Green Era, Kapil Dev, MegaDelta","h0wvko,5vpxbp,pnenck,8xisag,1ehkky,ycxt5s,mrwi8z"
GoQii,tkkrfm,Series C,2/1/2022,50,https://www.livemint.com/companies/start-ups/healthcare-platform-goqii-raises-50-mn-led-by-sumeru-ventures-11644996336018.html,"9Unicorns, Akbar Khan, Animoca, Ascendo, Block.one, G-Startup Worldwide, Kaval Bombra, Modalityhip, P. Gulati, Sanjay Narang, Shriram Nene, Sumeru, Venture Catalysts, Galaxy Digital, Mitsui, MegaDelta, DSG Consumer, GWC, Ratan Tata, Vijay Sharma","jt1491,xxlxhb,gjt0lb,bz2cg2,lpvwf1,e7wtgl,lcnm5k,pw9k7i,g5egk8,i25bf7,38t6wi,qmb9za,tmyvo7,44e83n,5w0u65,mrwi8z,d5yu3p,84ui2r,n2ixy9,r3tuby"
Gora,x4c5qz,Seed,5/1/2022,1.5,https://www.startupticker.ch/en/news/blockchain-startup-secures-1-5-million,"Algorand, Big Brain, Borderless, EXA Market, GMI, OrcaDAO, Parea, Valhalla","s7b833,4l8mmr,buo8ql,h0xk6e,csyvh3,0dkx3u,46avas,03zdwj"
GPU.Net	,a3fzi6,Series A,04/10/2024,5.25,https://twitter.com/gpunet/status/1778015013917098381,"M6, Spicy, Exnetwork, Black Dragon, Alex Becker, EllioTrades, Zephyrus, Crypto Banter, Halvings","l1yhc5,chjkg7,xx442f,poal5z,rxro0o,8uhea5,e0wtte,l89xw2,b57s8m"
GPU.Net,a3fzi6,Preseed,8/1/2023,0.5,https://www.globenewswire.com/news-release/2023/08/30/2734002/0/en/GPU-Net-Raises-500K-from-Momentum-6-Alphablockz-Nvidia-Backs-Testnet-Launch.html,"Momentum 6, Alphablockz","bah2fw,66xw1k"
Grass,9qbidj,Seed,12/1/2023,3.5,https://blockworks.co/news/blockchain-artificial-intelligence-fundraise,"No Limit, Big Brain, Polychain, Tribe, Bitscale, Big Brain, Advisors Anonymous, Typhon V, Mozaik","agwzs7,4l8mmr,tqh3bl,due5zk,2tgqti,4l8mmr,pr3xwn,wagf8o,90syk8"
Greensparc,j8knk9,Accelerator,11/1/2022,0.2,,"49th State Angels, Launch Alaska","pkaqi7,a3dnz6"
Growfitter,8ve4hw,Preseed,6/1/2017,0.6,https://entrackr.com/2017/06/health-startup-growfitter-raises-600k-pre-series-funding-expand-fitness-services/,"Hari Bhatia, Mintosh, Alchemist, SQue","1ixehb,zyw1ef,4p826x,ww9xnu"
Growfitter,8ve4hw,Seed,8/1/2022,1.5,https://economictimes.indiatimes.com/tech/funding/shark-tank-featured-growfitter-raises-1-million-in-funding-led-by-inflection-point-ventures/articleshow/90257919.cms?from=mdr,"Aman Gupta, Baksh, Blockchain Founders Fund, DevX, FirstPort, Inflection Point, JPIN, MAVM Angels, Mohit Burman, Startup Angel Network, Venture Catalysts, Talwalkars","rgrbi1,son7io,b2ybqs,xk9vnv,l765bu,5vzkab,i8evbl,iy5jcg,9xr3sv,edbfmp,tmyvo7,ms3jph"
Handshake,m9gkfk,Seed,7/1/2018,10.2,https://twitter.com/HNS/status/1744237732992593976,"a16z, Founders, Greylock, Polychain, Sequoia, Wave, Yang, Access, Amentum, Ausum, DCM, Genblock, Hashed, Iconium, SNZ, VironIT, Visary, VYSYN, Fair2Lab","d40or5,9btyj8,419x6r,tqh3bl,vf0qg4,v6xlk7,dl3888,d33d7a,2qhnja,8m8hfx,jtci9b,5dsvsj,ja2261,z3ngzr,wu15kr,7xqu4s,xt0vj3,fuws95,gzipi5"
Healthtracka,mq0qgk,Seed,6/1/2022,1.5,https://techcrunch.com/2022/06/21/nigerian-at-home-lab-testing-platform-healthtracka-gets-1-5m-backed-by-female-vcs/,"Alumni Angels Alliance, Healthcap, HoaQ, Hustle, Ingressive, Akazi, FirstCheck, Stone Mountain","nsa30e,680vbf,rx3q1j,nio0gx,akr1i0,abopk7,2ef10k,7rsmts"
heata,mcke93,Seed,9/1/2023,1,https://guide.dadupa.com/british-cloud-computing-startup-heata-raises-1m-to-further-develop-its-low-carbon-cloud-compute-network/,"Green Angels, Brookfund, Sustainable, British Gas","5e17r6,g1hgzb,udus4e,ac14rq"
Helium,5bm99m,Series A,10/1/2014,16,https://techcrunch.com/2014/12/09/helium/,"Khosla, FirstMark, Digital Garage, Marc Benioff, SV Angel, Slow, David Morin, Jeffrey Schox, Shawn Fanning","s5s0ze,biweh7,19pz0d,6ojf3f,k1e97y,ooq1d1,ud4lcv,nc413e,xat35q"
Helium,5bm99m,Series B,4/1/2016,20,https://www.businesswire.com/news/home/20160425005330/en/Helium-Raises-20-Million-Series-B-Funding-Round-to-Accelerate-Smart-Sensing-Solutions,"Google, Khosla, FirstMark, Munich Re","yont93,s5s0ze,biweh7,c9zewt"
Helium,5bm99m,Series C,6/1/2019,15,https://www.finsmes.com/2019/06/helium-raises-15m-in-series-c-funding.html,"Capital Factory, Fantail, FirstMark, Google, Khosla, Multicoin, Munich Re, Union Square, Uush","fyqab6,7zvtvf,biweh7,yont93,s5s0ze,2g0699,c9zewt,vuz4in,eseesx"
Helium,5bm99m,Series D,2/1/2022,200,https://www.coindesk.com/business/2022/02/18/crypto-powered-wireless-network-helium-raises-200m-at-12b-valuation-report/,"Tiger Global, Google, Munich Re, FTX, Goodyear, Liberty Global, Telefonica, Deutsche Telekom, TRCM, Corner, Alumni, Floating Point, Color, AU21, CMT Digital, Lontra, Third Prime, NGP, Khosla, FirstMark, Multicoin, a16z, Ribbit, Token, Hard Yaka, Pantera, Seven Seven Six, CRT Labs, Hivemind, CaptureAlpha, Dispersion, RW3, Blockchain Fond, Northbund, Uncorrelated, Raptor, Hack, L1 Digital, LightShed, Ash Park, Litani","rotj2h,yont93,c9zewt,ihumfm,q062d6,80vsaw,etf466,7dddth,gbf0q8,ylo81y,4bc5rd,aoxz1k,r5sj96,xmw0ev,suthoi,6gj1wa,vub62z,msil0t,s5s0ze,biweh7,2g0699,d40or5,b51i7e,6dsjxk,9n4okv,ozeg73,80hqah,jefoou,16a7gt,wqn9ms,9oo0xs,pixi8p,m7a80m,wfcztc,vff111,tdywri,a3mqq8,hmfg3c,r4ood6,2ybws5,3egzcf"
Hemera,uefnla,Seed,05/07/2024,2.6,https://www.prweb.com/releases/hemera-officially-launches-to-democratize-on-chain-intelligence-302138046.html,"Lingfeng, Nomad, SNZ, ChainLink","6q7dh3,zoshoo,wu15kr,dsl20s"
Hexagon,vwstsz,Seed,5/1/2022,2,https://www.globenewswire.com/news-release/2022/05/19/2447081/0/en/Hexagon-Wireless-Raises-2-Million-To-Build-Decentralized-Wireless-Networks.html,"Hypersphere, Mahesh Ramakrishnan, Mechanism, Salvador Gala, Superfluid","vkntey,pmx14k,ulvyo3,c59jtx,3ftss8"
Hivello,560f30,Seed,2/1/2024,2.5,https://www.prnewswire.com/news-releases/hivello-announces-upsized-funding-round-raising-usd-2-5m-amidst-high-demand-302049350.html,"Blockmate, Univid, Blockchange, Cypher, MH, Primal, Contango, Candaq, NGC, Blockchain Founders Fund, IDG","4xnix2,3eyneg,hbpmm3,798xl8,b04x9g,zj4ect,2bl1fj,h3elac,07pxi6,b2ybqs,f5avgu"
Hivemapper,o1qnxa,Seed,11/1/2015,3,,"Spark, Harrison Metal, Google, Homebrew, Founder Collective","gj9v6c,dfsp8g,yont93,tgyjdv,mpsbnn"
Hivemapper,o1qnxa,Series A,4/1/2022,18,https://www.businesswire.com/news/home/20220405005894/en/Hivemapper-Raises-18M-From-Multicoin-Capital-to-Create-the-World%E2%80%99s-First-Decentralized-Mapping-Network,"Multicoin, Craft Ventures, Solana, Shine, 75 & Sunny Labs","2g0699,i6sgg1,tlb60n,cjmn2h,8vyzyl"
Hopr,rdr178,Seed,04/26/2024,1.5,https://twitter.com/GnosisDAO/status/1783874344013463583,Gnosis,5aftnd
HOPR,rdr178,Seed,7/1/2020,1,https://www.coindesk.com/business/2020/07/09/binance-labs-leads-1m-seed-round-in-crypto-tor-alternative-hopr/,"ArkStream, AU21, BlackDragon, Caballeros, Chronos, Drops, Focus Labs, MintedLab, Rubin, Spark Digital, Staked.vc, Synaitken, VBC, Vendetta, ZMT, Edge & Node, Ankr, Dusk Network, Harmony One","zloyr1,xmw0ev,8nclhv,wldl30,8a2od5,lrxdc8,9va778,1rq4ip,z1ww7b,pyukl2,eud02c,1uyl9r,xvgf6w,nwl5v7,xemx4j,23f4q2,yxetck,opc76c,curksv"
Hotspotty,8hmhev,Preseed,8/1/2022,,,"FutureMoney, Samsung NEXT","6c0yfx,1im0oz"
Huddle01,3r2xgz,Seed,4/1/2023,2.8,https://www.prnewswire.com/news-releases/huddle01-raises-2-8m-led-by-hivemind-to-build-the-1st-decentralized-communication-network-301791654.html,"Hivemind, Superscrypt, M31, Protocol Labs, East, LongHash, Good News, Balaji Srinivasan, Stani Kulechov, Dan Romero, Juan Benet","16a7gt,t9j2qz,b1ba0p,ti312b,tsm1o4,po8xe3,aw6d9h,896jil,3bchmx,k2s470,zbmcb4"
Humanode,ful6z6,Preseed,6/1/2021,1,,GravityX,mlhi9g
Humanode,ful6z6,Seed,2/1/2022,2,https://cointelegraph.com/press-releases/humanode-raises-2-million-while-testnet-hits-1-650-unique-validators,"AU21, Avalanche, CSP, Genblock, Jaynti Kanani, Republic, Sandeep Nailwal, Shima, Stafi, Tribe, Wintermute, Polka Bridge, Cogitent, Follow [the] Seed, GD10, Nine2Five, Yellow Spoon, Tenzor","xmw0ev,abvcou,6hezki,5dsvsj,yfrryp,unykak,9e1gk4,lhs5s8,b0lq1g,due5zk,s812zr,jwrten,bxcu1r,5qx1w8,okjrd0,n7ldex,ka28kz,52fjgj"
Humanscape,6ixtt2,Seed,10/1/2018,3.1,http://www.cnrhg.asia/en/humanscape-raises-3-1-million-in-series-a-funding/?ckattempt=1,,
Humanscape,6ixtt2,Seed,10/1/2019,3.1,https://medium.com/humanscape-ico/humanscape-raises-3-1-million-in-pre-series-b-funding-8e77b1075fd,,
Humanscape,6ixtt2,Series A,12/1/2023,15.3,https://www.cointime.ai/flash-news/decentralized-patient-network-humanscape-completed-us-86028,,
Hyperbolic,8heoo1,Preseed,1/1/2022,0.7,,"Chapter One, Samsung NEXT, Modular","gwix1y,1im0oz,p99cdg"
Hyperline,y0wpxj,Seed,1/1/2024,5.2,https://twitter.com/hyperline_xyz/status/1749903630415867984,"Slow, South Park Commons, Script, Canonical Crypto, Volt, Picus, Maelstrom","ooq1d1,tau7dj,uw2lru,596ql7,gasfop,0wrnki,rd2mzf"
Hyperspace,oevejl,Seed,11/1/2021,11,https://www.wamda.com/2021/11/dubai-based-hyperspace-raises-11-million-seed-round,"Bolur, Introsight, KE, Mohammed Afkhami, Rafael Ilishayev, Scott Ross, Yakir Gola","a9qi3v,tptsn3,by4pbo,uzi06y,ojom6m,6rzgq8,pp6ut1"
Hyperspace,oevejl,Series A,10/1/2023,55,https://www.thenationalnews.com/business/start-ups/2023/10/05/riyadhs-hyperspace-raises-55m-to-scale-operations/,"Galaxy Interactive, K5, Apis Venture, Segal","nlqu6w,3x72a9,t2as8g,18r8ir"
Iagon,omgud6,Seed,6/1/2021,3.4,https://www.investing.com/news/cryptocurrency-news/iagon-raises-34m-funding-to-build-first-data-platform-on-cardano-2545346,"Alphabit, AU21, BH, Blockchain Israel, CoinsGroup, Darren Camas, Faculty, GBV, Genblock, Kirin, Launchpool, LedgerLink, LlamAS, Next Chymia, Panda, PANONY, Trustdao, X21","o5kpgb,xmw0ev,68y1pb,26u2xo,htjmml,15begf,k1qvmn,rlo5x9,5dsvsj,zyyr5b,ehuolk,864q70,8egclo,4r7042,11dur6,l3imfr,dd10pl,brmebh"
IMGNAI,du3f01,Preseed,1/1/2024,1.6,https://www.theblock.co/post/274669/imgnai-raise-digital-companion-launch,"Hack, Rana, Selini, West Ham, Motus, dao5","a3mqq8,628gra,xtk30o,xtbe5p,jj50jr,r54jbx"
Impossible Cloud,qcgu9q,Seed,3/1/2023,7.6,https://venturebeat.com/business/impossible-cloud-raises-7-6m-to-decentralize-cloud-services-with-Web3 Capital/,"HV, 1kx, Protocol Labs, TS, very early","fn2hky,bspyld,ti312b,00wro7,dra7iz"
Inference Labs,qi9eg6,Preseed,04/15/2024,2.3,https://chainwire.org/2024/04/15/inference-labs-raises-2-3-million-in-pre-seed-funding-to-revolutionize-ai-with-proof-of-inference-starting-with-liquid-staking/,"Mechanism, Digital Asset, Delphi Digital, Big Brain, Bitscale, Edessa, ID Theory, Mozaik, Newman, Seed Club, Momentum 6, Skynet Trading, Sandeep Nailwal, Santiago Santos, DeFi Dad, Richard Dai","ulvyo3,dnu31w,67mqz0,4l8mmr,2tgqti,ry12po,2imimj,90syk8,pnypo2,kzy7cw,bah2fw,2ge04u,9e1gk4,ksae6d,lkgkfl,c6texe"
Integritee,6hlk6x,Seed,11/1/2021,4.5,https://www.coindesk.com/business/2021/06/17/blockchain-privacy-firm-integritee-raises-2m-ahead-of-kusama-parachain-auction/,"Brotherhood, CoinF, K300, LBank Labs, MG, Alves, AU21, Black Mamba, Czhang Digital, Digital Finance, FBG, Gate.io, GFS, Hotbit, LD, NGC, OKX, OKX","0hfvt9,zu1950,gi55pp,89glxu,9kyndm,gvqos9,xmw0ev,jbacwh,lzrigs,r2lof0,lfbmt3,i1vs03,lsc0yi,h7yooe,qqc9zd,07pxi6,smqwtv,smqwtv"
IO.Net	,61zuw7,Series A,03/05/2024,30,https://www.reuters.com/technology/ai-focused-blockchain-startup-io-research-raises-30-mln-series-funding-round-2024-03-05/,"Multicoin, 6th Man, M13, Delphi Digital, Solana, Aptos, Foresight, LongHash, SevenX, ArkStream, Animoca, Continue, MH, OKX, Anatoly Yakovenko, Yat Siu, Mohammad Shaikh, Jin Kang, Avery Ching","2g0699,hol96b,80qehd,67mqz0,tlb60n,yc3rjf,uktppp,po8xe3,pu3yyr,zloyr1,gjt0lb,2ckrz9,b04x9g,smqwtv,nxop7l,z6cfwz,79518t,ons3en,vulroe"
IO.Net,61zuw7,Seed,10/1/2023,,,Multicoin,2g0699
IOTA,gobzn5,Seed,3/1/2018,,,"Almora, Ledger, Universal, WAGMi, West Labs, Startup Autobahn","spurmc,rnu4s2,s2idi6,nlvx3r,24ormv,cm89up"
IoTeX,oqhdss,Series A,04/02/2024,50,https://www.prweb.com/releases/snz-capital-foresight-ventures-futuremoneygroup-borderless-capital-and-others-invest-50m-into-the-iotex-ecosystem-to-accelerate-depin-growth--adoption-302105700.html,"SNZ, Foresight, Borderless, Amber, FutureMoney, Metrics, Waterdrip, Escape Velocity, Summer, ","wu15kr,uktppp,buo8ql,z37132,6c0yfx,2onn8w,o7xcsr,grev3h,4f9p4d"
IoTeX,oqhdss,Series A,6/1/2022,10,https://www.coindesk.com/business/2022/06/07/machinefi-lab-raises-10m-to-incentivize-iot-data-collection-for-web-3/,"AG Build, AlphaGrep, Crypto.com, DHVC, Draper Dragon, Escape Velocity, Goodwater, Hanwha, Hashkey, IOSG, NewBuild, Samsung NEXT, Vista Lab, Wemade, Wintermute, Xoogler, NGC","d82r3q,saoq66,ubwov4,772xwk,caojlf,7zvxz8,x10a41,wcrsby,nxzb7m,i1x9du,0go35f,1im0oz,ikokx0,t9lvtn,s812zr,78enfd,07pxi6"
IQ,8gkezm,Preseed,7/1/2015,0.32,,"Chandler Nichols, David Petersen, David Segura, Kami Parsa","m5mkim,5sc7r6,uwvjkn,qhtpr6"
IQ,8gkezm,Series A,6/1/2018,30,https://fortune.com/crypto/2018/02/08/blockchain-everipedia/,"DNA, Galaxy Digital, KrowdMentor, Wave, Mucker","nogms2,44e83n,16ps32,v6xlk7,k1jwtb"
Irys,tjyvc7,Seed,5/1/2022,5.2,https://www.prnewswire.com/news-releases/bundlr-network-raises-a-5-2-million-seed-round-to-build-an-easier-faster-way-to-store-data-on-Web3 Capital--301539755.html,"Arweave, Framework, Hypersphere, Kearny Jackson, OpenSea, Permanent, Race","hhudw8,yx4w71,vkntey,p2kq36,o92n85,nym997,bn4wmc"
Jasmine,bwhoon,Seed,9/1/2022,2,,"Cerulean, Climate, Collab+Currency, Factor, Focal, GSR, Palrecha, UpHonest, WorldQuant","9jairy,4zunln,zaf9xh,rmj9ht,4ufrbu,v81ftp,6otq8c,q0cuxs,1f9kgy"
Jiritsu,j68t8z,Series A,9/1/2023,10.2,https://www.prnewswire.com/news-releases/jiritsu-raises-10-2-million-in-funding-to-revolutionize-verifiable-compute-301934115.html,"Comma3, Eterna, Kestrel, Republic, Susquehanna, Tokentus, AGE Crypto, gumi Cryptos, Lingfeng, Polymorphic, Saxon, Shima, KittyHawk, Serafund","k0celj,vw2n89,1ojew7,unykak,ga1lv7,qpv2lq,mzqq7s,y5m26s,6q7dh3,hepzxq,5rmf8c,lhs5s8,tn0wwd,003re3"
Jur,y5mzyr,Preseed,12/1/2020,2,https://jur.io/blog/jur-market-report-0/,"Draper Associates, MDR LAB, Scytale, Steve Ebsworth, Fenbushi","uwmmpg,7vadqq,h25e6r,5u4ou5,mywjsu"
Kandola,8y4g79,Preseed,4/1/2022,0.45,https://www.businesswireindia.com/blockchain-startup-kandola-raises-usd-450k-in-a-pre-seed-round-funding-led-by-arcanum-capital-alphawave-global-and-polygons-sandeep-nailwal-78135.html,"Alpha Wave, Arcanum, Ascent, BKex Labs, Cogitent, Harsh Rajat, Kenzi Wang, Mayur Relekar, Sandeep Nailwal","vstg5d,m8rgyb,kav4di,xent44,bxcu1r,l4gut1,wohqmd,ka3b7r,9e1gk4"
Karrier One,j9n1l6,Seed,1/1/2024,1.5,https://www.finsmes.com/2024/01/depin-and-dewi-come-to-sui-in-groundbreaking-karrier-one-partnership-upcoming-token-launch.html,Sui Foundation,8ro1xz
Karrier One,j9n1l6,Seed,2/1/2023,1.46,https://www.businesswire.com/news/home/20230405005336/en/,"Round13, Lontra, Escape Velocity","62bdul,6gj1wa,7zvxz8"
Kilt,bcanxl,Seed,1/1/2022,,,"Aza, Blue7, Crypto Dorm, Cypher, Follow [the] Seed, Hodl, Illuminati, Infinity, LBank Labs, Newtribe, Primeblock, Ringier, Scytale, VBC, Alves, Blockstar Technologies, CryptoViet, MoonBoots, Pnyx, TGE","pbunpe,wxcf8r,bd260g,798xl8,5qx1w8,39iz1e,xdw0yr,rrtsc3,89glxu,65epfb,ciz6c6,wsuffu,h25e6r,xvgf6w,gvqos9,y7olrs,enemyk,5252r4,6cd1m3,m2z4hv"
KIP,wwnksh,Seed,2/1/2024,,https://twitter.com/KIPprotocol/status/1753010295889707304,"Animoca, BARMY, CSP, MQdao, Spicy, Skyvision, Purechain","gjt0lb,1gnwo3,6hezki,074vxf,chjkg7,5o347p,kvng0r"
Koii,xfjtib,Seed,3/1/2021,1.21,,"Tess Ventures, 4ward, Aza, Bison, CaptureAlpha, CSP, Cyberight, DoublePeak, Ellipti, Fenbushi, Maven 11, Monday, Qwerty, Sanctor, SevenX, Waterdrip","lzpnns,p69jgl,pbunpe,puuj5e,wqn9ms,6hezki,pmco7y,18l8yx,knw63n,mywjsu,xgzede,j4k67v,g72mqv,m05wan,pu3yyr,o7xcsr"
Kosen,6b3lxu,Seed,11/1/2021,5,https://medium.com/kosenlabs/kosen-labs-founded-by-ex-deepmind-researchers-aims-to-bring-the-benefits-of-advanced-ai-to-the-c8ae04119759,"a16z, Daedalus, Formless, Framework, Protocol Labs","d40or5,ynh9fg,6ln74n,yx4w71,ti312b"
Kryptview,3zopno,Preseed,4/1/2022,1.5,https://www.finsmes.com/2023/04/kryptview-raises-1-5m-pre-seed-funding.html,"Binance, Bitpanda, Bpifrance, Defi Research Institute, GSR, KuCoin, Matters, Serafund, Smart-Chain, The Blox","mrgeec,6jvbqx,0f1owq,o4gps9,v81ftp,azofz8,rfjybl,003re3,jr9bwv,2xfkvg"
Kuva,77bx8k,Series A,11/1/2023,17.6,https://payloadspace.com/kuva-raises-17-6m-series-a-will-expand-stateside/,"Voima, Nordic Foodtech, Earth VC","awk70m,9q6hxs,6342ai"
Kwil,9xue69,Seed,9/1/2022,8.9,https://www.accesswire.com/718966/Decentralized-Database-Platform-Kwil-Raises-89M-Seed-Round,"SevenX, 4 Seasons, AlleyCorp, Amplify, Arweave, Blockchange, Chainlink Labs, Compute, DCG, FJ Labs, Foresight, Formless, Genblock, HANSAINVEST, Mask Network, Moonshot Research, NGC, NxGen, Space and Time","pu3yyr,4j4oj3,0jqovb,a1wztr,hhudw8,hbpmm3,e3ul8g,maid89,apd14v,h58ujg,uktppp,6ln74n,5dsvsj,4nohge,thxgaw,795ufc,07pxi6,rgk0ot,gn3guk"
KYVE,u6mo76,Preseed,6/1/2021,1,,"4 Seasons, Bering Waters, Christian Stroh, Cosmos, D1Ventures, Emanuel Ferm, Farid Rached, Hypersphere, Ignite, Kaiser Permanente, Kenneth Ng, Lemniscap, lllia Polosukhin, Mark Heus, Mechanism, Scott Moore, Tate Berenbaum, Volt","4j4oj3,5b7spr,3t07jb,67afgf,m6mz4i,2igv5u,yjw8np,vkntey,c9dgeq,cwh18x,dbnrgb,kjm7ph,zwue16,niilon,ulvyo3,xph9q9,91d2gg,gasfop"
KYVE,u6mo76,Seed,10/1/2021,2.88,https://www.coindesk.com/tech/2021/10/26/data-pipeline-protocol-kyve-raises-28m-from-industry-insiders/,"Alex Shevchenko, Arweave, Avalanche, Aventures, CMS, Coinbase, Composable (Financial Software), Compute, Distributed Global, Erik Erik, Flori, Ganesh Swami, Interchain, Justin Kan, NEAR, O(1) Labs, Octopus, Permanent, PureStake, Robin Chan, Santiago Santos, Solana, Ternary, Volt, Zee Prime","5g3hyv,hhudw8,abvcou,ue6j4s,q4ztc2,73opsz,jmdud3,maid89,sknhsa,ag8xow,ajzzhi,zf8iq9,i3u36b,0e5as0,b6vnn8,mwijuq,n9t6zl,nym997,v3nhx4,6br51s,ksae6d,tlb60n,bym0hu,gasfop,urug6u"
KYVE,u6mo76,Series A,6/1/2022,9,https://www.theblock.co/post/154836/kyve-network-hits-100-million-valuation-as-it-raises-9-million,"Blockchain Coinvestors, Cerulean, Hash#CIB, Huobi, IOSG, MEXC, Wicklow, Anagram","7oqynx,9jairy,yoijyl,t7xkdd,i1x9du,d0dwes,eo7aux,fahk60"
Lava,jq8mvz,Seed,02/15/2024,15,https://twitter.com/lavanetxyz/status/1758162588381405563,"Hashkey, Jump, Tribe, Alliance, Protocol Labs, MH, Chorus One, Celestia, North Island, StarkWare, Anagram, Kommune, Node, AlphaLab, Dispersion, Quiet,Galileo, ChainLayer, Keplr, Compa, Finality","nxzb7m,4ssdn4,due5zk,7ygqh2,ti312b,b04x9g,la4mmt,70b3g7,f87dvf,vrsed8,fahk60,7dehxu,3cjty6,wpzjqq,9oo0xs,gdty4y,cznutg,jsmrlo,i89h0e,qh9y6v,074afi"
Lavita.AI,tylsdp,Seed,5/1/2023,5,https://www.businesswire.com/news/home/202305 Ventures10005446/en/Lavita-AI-Raises-5M-Seed-Financing-to-Launch-the-First-Patient-Driven-Health-Information-Marketplace-to-Accelerate-Life-Sciences-Innovation,DHVC,772xwk
Lighthouse,24l8zf,Seed,10/1/2022,7,https://www.coindesk.com/business/2022/05/12/lighthouse-raises-7m-to-be-the-search-engine-of-the-metaverse/,"Balaji Srinivasan, Hash#CIB, NGC, Protocol Labs, Accel, BlockTower, Animoca, White Star, Gemini Frontier, LongHash","896jil,yoijyl,07pxi6,ti312b,idlbd7,1vifzd,gjt0lb,o3c9bd,c047hh,po8xe3"
Livepeer,0dpzm4,Series A,6/1/2017,8,https://techcrunch.com/2019/06/17/decentralized-video-infrastructure-platform-livepeer-raises-8m-series-a/,"Northzone, DCG, Libertus, Collaborative, Notation, Compound, North Island, StakeZero, Benjamin Crane, Ben Rubin, CoinFund, Haivision, Tian He","hne3si,apd14v,sk9qn6,isf2hj,t105wi,mqgff4,f87dvf,5pzmni,lksww3,z0kxfe,szfiug,8one47,fco3b6"
Livepeer,0dpzm4,Series B,1/1/2022,20,,"Alan Howard, Tiger Global, 0 Ventures, 1kx, BoxGroup, Charge, Chris Hobcroft, Collab+Currency, Knickerbocker, Moonwhale, Multicoin, Pantera","ts7u8r,rotj2h,r1a7zj,bspyld,q8z49k,4l2hcd,eumauw,zaf9xh,eg9pp3,dd123i,2g0699,ozeg73"
Livepeer,0dpzm4,Series B,7/1/2021,20,https://www.coindesk.com/business/2021/07/29/decentralized-video-protocol-livepeer-raises-20m-to-take-on-streaming-giants/,"DCG, Coinbase, CoinFund, Northzone, 6th Man, Visary, Warburg Serres","apd14v,73opsz,szfiug,hne3si,hol96b,xt0vj3,gduv1m"
Lumino,3ttk4l,Seed,1/1/2024,,,"Escape Velocity, Zero Knowledge","7zvxz8,tm95um"
Lumoz,x60254,Series A,04/08/2024,6,https://www.theblock.co/post/286969/lumoz-crypto-funding-token-round-valuation,"OKX, Hashkey, Kucoin, Comma3, Kronos, Kernel, Sandeep Nailwal,","smqwtv,nxzb7m,azofz8,k0celj,bvyx97,yv5v8q,9e1gk4"
Lumoz,x60254,Strategic/Angel,05/29/2024,,https://x.com/LumozOrg/status/1795824512468160602,"IDG, Blockchain Coinvestors, Gate.io, Summer, Everest Ventures Group, 7UpDAO, Sweep","f5avgu,7oqynx,i1vs03,4f9p4d,goald7,r07kjn,cdoetr"
Lunyr,74rmzw,Preseed,1/1/2017,1.25,https://cointelegraph.com/press-releases/lunyr-crowdsale-successfully-exceeds-minimum-target,Dominic Donofrio,v2r2oo
MaidSafeCoin,ubmhxr,Preseed,2/1/2015,,,"Atopia, BitAngels, Dima Starodubcev, Jafer Makki, Marc Brands, Mark Ranford, Master","bwghh0,tdc3yj,o01d9p,tmcih2,spo1sh,rid27c,ka4f30"
Manta,m3djiu,Preseed,2/1/2021,1.1,https://cointelegraph.com/news/manta-aims-to-bring-a-private-decentralized-exchange-to-polkadot-with-1-1m-raise,"Advanced Blockchain, AU21, BTC, CoinFund, DeFiance, Etienne vantKruys, Genblock, Hypersphere, Illusionist, Multicoin, Origin, Polychain, Rarestone, Three Arrows","hcx26d,xmw0ev,o1unbe,szfiug,qp5s3g,rwthif,5dsvsj,vkntey,9xb78i,2g0699,j36zoh,tqh3bl,h9g1s5,lb0lmf"
Manta,m3djiu,Seed,10/1/2021,5.5,https://cointelegraph.com/news/polkadot-based-privacy-project-manta-network-raises-5-5m,"ArkStream, Assembly, CMS, Digital Finance, Divergence, Kosmos, LongHash, ParaFi, Sanctor, SkyVision, SNZ, Spartan, Web3 Capital, Zee Prime","zloyr1,go7fr1,q4ztc2,r2lof0,0y8voh,9p60sa,po8xe3,6f2cxt,m05wan,5o347p,wu15kr,pgoyl5,pvr738,urug6u"
Manta,m3djiu,Series A,7/1/2023,25,https://cointelegraph.com/news/manta-network-developer-raises-25m-in-series-a-launches-layer-2-for-zk-apps,"a41, Binance, Moonrock, Primeblock, Redline, Qiming, SevenX, Pnyx","7bn5bf,mrgeec,n73vnt,ciz6c6,7rf9rs,drbv40,pu3yyr,6cd1m3"
Masa,dahm7v,Seed,1/23/2024,5.4,https://www.businesswire.com/news/home/20240123671602/en/Masa-Network-Raises-5.4M-in-Seed-Round-to-Build-the-%E2%80%9CDecentralized-Google%E2%80%9D-for-the-World%E2%80%99s-Personal-Data,"Anagram, Avalanche, DCG, GoldenTree, OP Crypto, Unshackled, PEER","fahk60,abvcou,apd14v,dzx3xa,9qbjjp,ongauu,nrnf5w"
Massive,s4glrh,Seed,11/1/2021,11,https://www.prnewswire.com/news-releases/massive-raises-11-million-in-seed-funding-from-point72-ventures-to-bring-a-new-business-model-to-the-internet-301434259.html,"6ixth Event, Arjun Anand, BlockTower, Coinbase, CoinShares, Constantino Voulgaris, Daniel Mathon, Hustle, Karim Varela, Kenneth Johansen, Kraken, Kurt Bilafer, Michael Tanney, Microsoft, Mozilla, Nvidia, Packy McCormick, Pieter Van Eck, Point72, Prabhakar Reddy, Raaid Hossain, Ruigang Wu, Ryan Selkis, Sanat Rao, Sriram Krishnan, Trousdale, Xoogler, LAUNCH","gow2jo,ei0xwd,1vifzd,73opsz,skjtm0,wtmpjt,bl0wyj,nio0gx,6p6ssw,ibmmdz,qd0p5n,xlaqe8,hosat8,mc0vmp,e1gqs2,m1prxp,o2577p,mhujq3,ng63an,on54di,ak8c1a,vxdiqe,6iy81o,c24ctk,myil2k,bm9s6p,78enfd,a3lqus"
Mawari,ygaj99,Seed,2/1/2023,6.5,https://www.businesswire.com/news/home/20230207006196/en/Mawari-Raises-6.5-Million-in-Oversubscribed-Seed-Round-To-Build-a-Decentralized-XR-Streaming-Network,"Accord, Anfield, Blockchange, Primal, Super, Abies, Decasonic, Outlier, Revolution Tech, Adways","qzewsg,igwwfx,hbpmm3,zj4ect,6x8jib,muqrv1,rbelby,vjpj24,4219d0,bh4wd4"
MemoLabs,8ul10b,Seed,6/1/2021,,,"Commando, DHVC, Finture, Hash Global, Hashkey","zajrom,772xwk,y2lysu,us9d7q,nxzb7m"
Menthol,b9egeq,Preseed,4/1/2022,1.25,,"LD, Moonrock, Republic Bank of Chicago","qqc9zd,n73vnt,slylr0"
Meson,wop23m,Private/Public token sale,02/08/2024,8.75,https://twitter.com/NetworkMeson/status/1755662941511356581,,
Meson,wop23m,Seed,12/1/2021,3.5,https://finance.yahoo.com/news/meson-network-raises-3-5m-131500338.html,"Libertus, Mask Network, Hash Global, DCG, Youbi, Hashkey, Zonff, SevenX, Permanent, CMT Digital, Rarestone, DHVC, Sanctor, LayerX, Matrix, Sam Williams, Thomas Bailey, Jack Herrick, Cecilia Li, Meltem Demirors, Presto Labs","sk9qn6,thxgaw,us9d7q,apd14v,pcw959,nxzb7m,1m3pt6,pu3yyr,nym997,suthoi,h9g1s5,772xwk,m05wan,xq7npm,ikeqay,uqojef,l24zdj,vn2xbi,oplwzc,ivtzio,6j16uu"
Meson,wop23m,Strategic/Angel,01/01/2024,,https://crypto-fundraising.info/projects/meson-network/,Presto Labs,6j16uu
Meson,wop23m,Strategic/Angel,03/15/2024,,https://twitter.com/NetworkMeson/status/1768445122914775217,OKX,smqwtv
Metablox,k5fxwj,Seed,3/1/2022,2,https://www.venturecapitaljournal.com/metablox-inks-seed-financing/,"Synergis, Collab+Currency, NFT Technologies, SNZ, Future Life, Slope, CrowdCreate","xf57bt,zaf9xh,z22qa3,wu15kr,xz1vnr,v7aaaw,4t27eh"
Metablox,k5fxwj,Strategic/Angel,03/28/2024,5,https://twitter.com/DePINBuddy/status/1773164755634487785,"Volt, Anagram, IoTeX, SNZ, Awesome People, Synergis, Comma3, Stratified, Future3 Campus, JDI, ZC","gasfop,fahk60,g4z7os,wu15kr,951veq,xf57bt,k0celj,9jfdo8,c9uxrr,vzqumt,o5of0s"
MetaGravity,jvfvyy,Seed,4/1/2023,9.5,https://tech.eu/2023/04/21/metagravity-do-something-amazing/,"Agrippa, Cogitent, Ex-Capital, K5, MoonPay, Mulana, Pancasila, Perridon, PG, Ryze, Spartan, Gravity, Market One","v5aw83,bxcu1r,8v67z1,3x72a9,n16trk,4dh0t9,pr3bit,y6oua0,5mg8ss,06o6kd,pgoyl5,bqmpxo,q8aum6"
MetaPhone,prs8dc,Seed,05/06/2024,1,https://twitter.com/metaphone_ton/status/1787440551651897738,JDI,vzqumt
MobiFi,ars9qg,Seed,9/1/2021,2.8,https://siliconcanals.com/news/startups/mobifi-raises-2-36m/,Phoenix.io,h2wgzg
Modal,xegpzk,Seed,4/1/2022,7,https://techcrunch.com/2023/10/10/modal-labs-lands-16m-to-abstract-away-big-data-workload-infrastructure/,"Amplify, Arjun Narayan, Barry McCardel, Boris Jabes, Bucky Moore, Christopher Ré, Creandum, Elad Gil, Essence Venture, Lindsay Pettingill, Neha Narkhede, Quiet, Tristan Handy","a1wztr,djmofb,1pi13y,uns0bm,snj7ma,03hx49,6qqzvk,ul6tyf,umdkfq,n9fxs2,ic9k7i,gdty4y,h0yuhw"
Modal,xegpzk,Series A,10/1/2023,16,https://techcrunch.com/2023/10/10/modal-labs-lands-16m-to-abstract-away-big-data-workload-infrastructure/,"Allison Pickens, Barr Moses, Benn Stancil, Definition, Eastlink, Firestreak, Gaingels, Howard University, Jeff Hammerbacher, Jordan Tigani, Karim Atiyeh, Leigh Braswell, Lux, Redpoint, Ry Walker, Tejas Manohar, Zero Prime","d7e7x7,f0vgv5,eud3qk,64cas2,k5q5k9,cs5wgp,2o6wn2,mdb8di,zkz4v0,q7s8dk,krji44,ah0a0s,9tdi8p,zhjcle,b2k6ex,v2grtn,9ltipb"
Modulus,93up2s,Seed,7/1/2023,6.3,https://www.theblock.co/post/260335/modulus-raises-6-3-million-to-bring-crypto-security-to-ai,"1kx, Alliance, Bankless, Blockchain Builders, FloodGate, Global Coin Research, Inflection, Stanford Blockchain Club","bspyld,7ygqh2,wvitwb,94d9pz,vydmt3,jshpe0,e7om6t,rnfx5j"
Moflix,u35fhl,Seed,11/1/2023,3.1,,Hashgraph,jy83oo
Mogul,129mdn,Seed,11/1/2023,3.6,https://techcrunch.com/2023/11/08/mogul-club-raises-3-6m-toward-its-effort-to-make-real-estate-investing-more-accessible/,"Anitha Vadavatha, Avalanche, Draper Associates, Draper B1, Draper Dragon, InterVest, Rosa Rios, Stacie Olivares","38oo9k,abvcou,uwmmpg,rl7vtp,caojlf,gxyy7r,xda5zy,3svwlm"
Multisynq,5c2tug,Seed,04/12/2024,2.2,https://twitter.com/multisynq/status/1778598443872587808,"Manifold, ARKN, PHD Capital, enigma, AlphaCrypto, Republic, Gmoney, NaniXBT, 0xLawliette, Hype.eth","eij6bk,ii5tnv,pvne14,vxxepe,cunjx5,unykak,4j98hb,o7v664,7yvpc9,s9mklm"
myMessage,1rcuf0,Seed,12/1/2021,2.1,https://finance.yahoo.com/news/mymessage-raises-2-1-million-185500210.html,"AU21, Avalon Wealth, Basics, BSCStation, D21, DeltaHub, Dreamboat, Exnetwork, Gains Associates, Infinity, Kenzo Labs, Magnus, Oddiyana, Onebit, Regain, RR2, Rubin, VBC, Vespertine, X21, ZBS","xmw0ev,oaw1ui,vcxbpn,2h4i1m,nu9e33,35e9e6,tel396,xx442f,wrehju,rrtsc3,fdzd99,243kcn,ofj0rs,41gpqf,5zxzuu,yibv9g,z1ww7b,xvgf6w,nj1v3c,brmebh,0nsbs7"
Myna,wqoxyk,Seed,9/1/2022,6,https://www.theblock.co/post/175248/nfl-superstars-back-coolkicks-founders-6-million-raise-for-collectible-trading-platform,"AAF, Avalanche, Avalanche, BluePointe, CitizenX, Coolclicks, Eileses, K5, Kyler Murray, Madison Paige, Odell Beckham, Polygon, Quality Control, Spartan, Wave","47vy1z,abvcou,abvcou,ksmmyi,cnjnvc,cd6uvj,6vs8gm,3x72a9,vlqjau,mxcxrg,y0xi06,8agdnp,97i1ol,pgoyl5,v6xlk7"
MyShell,1gfb8a,Preseed,01/01/2023,0.2,https://crypto-fundraising.info/projects/myshell/,,
MyShell,1gfb8a,Seed,03/27/2024,11,https://www.theblock.co/post/285072/web3-ai-platform-myshell-funding,"Dragonfly, Delphi Digital, Bankless, Maven 11, Nascent, Nomad, OKX, Balaji Srinivasan, lllia Polosukhin, Casey K. Caruso, Santiago Santos","5tj4jx,67mqz0,wvitwb,xgzede,gnhylz,zoshoo,smqwtv,896jil,zwue16,2njhsb,ksae6d"
MyShell,1gfb8a,Seed,10/1/2023,5.6,https://www.theblock.co/post/256691/web-ai-platform-myshell-funding,"Hashkey, Folius, SevenX, OP Crypto","nxzb7m,ifb7yv,pu3yyr,9qbjjp"
MyShell,1gfb8a,Seed,10/16/2023,5.6,https://www.theblock.co/post/256691/web-ai-platform-myshell-funding,"INCE, Hashkey, Folius, SevenX, Inception, TSVCap","cnyjaq,nxzb7m,ifb7yv,pu3yyr,s4jf02,qce0sh"
Mystiko,eakhga,Private/Public token sale,04/01/2024,11.25,https://crypto-fundraising.info/projects/mystiko-network/,,
Mystiko,eakhga,Seed,03/20/2024,18,https://finbold.com/web3-base-layer-mystiko-network-completed-a-18-million-usd-seed-funding-round/,"Peak XV, Samsung NEXT, Hashkey, Mirana, Signum, CoinList, Tribe, Morningstar, Naval Ravikant, Sandeep Nailwal, Gokul Rajaram","igv2a1,1im0oz,nxzb7m,8rcqvw,oltsrb,bfs2r3,due5zk,k9u90q,co49ki,9e1gk4,fks0iz"
Natix,uq4s3v,Seed,4/1/2023,3.5,https://www.thesaasnews.com/news/natix-raises-3-5-million-in-seed-round,"Blockchange, XYO, Mysterium Network, CV VC, Mulana, Blockarm, Techstars, Plug and Play, CoinIX","hbpmm3,5jng4b,56k9fh,8a0izu,4dh0t9,7bjt0y,a1uyxq,w19rhh,h8sw72"
Natix,uq4s3v,Strategic/Angel,04/25/2024,4.6,https://www.theblock.co/post/290927/depin-natix-funding-token-airdrop-solana,"Borderless, Tioga, Escape Velocity, Moonrock, Cogitent, Big Brain, Laser Digital, WAGMi, Inception, Room40, Veris, IoTeX, FutureMoney, iAngels, James Parillo, Paul Taylor, Vijay Maharajan, Crypto Banter","buo8ql,llojfj,7zvxz8,n73vnt,bxcu1r,4l8mmr,fhd6hx,nlvx3r,s4jf02,1qqzyc,monvfg,g4z7os,6c0yfx,ykd20k,kaduov,0kzxhl,kh8jxd,l89xw2"
NeuralAgent,8deftt,Accelerator,10/1/2021,,,European Space Agency,vmmb09
Neurosity,6bppe0,Preseed,2/1/2019,0.15,,Quake,kcl4ay
Neurosity,6bppe0,Seed,7/1/2019,4.98,,"Boost, Founders, Inc, Hatcher+, Joyance, Myelin","94mx0d,9btyj8,jn43xi,g3q5mo,3vy365,hq8rgo"
Neutroon,uktna7,Preseed,10/1/2021,0.5,https://www.sharedaccess.com/2021/10/12/boost-private-5g/,"EvoNexus, Ferrovial, Jordi Vallejo, Shared Access, Cel-Fi, 5G, Oriol Relats","4xtwec,25jwrn,yzamin,nst1cf,hayr62,0otk44,36axil"
Nevermined,4rizhn,Seed,7/1/2022,3.09,https://www.businesswire.com/news/home/20220712005503/en/Nevermined-Raises-%E2%82%AC3-Million-Seed-Funding-to-Make-Web3 Capital-Development-Easier-for-Creators-and-Developers,"Polymorphic, Signature, Wolfman.One, The Graph","hepzxq,qpkks9,xbe8nl,ffngjj"
NexBloc,i27v9c,Accelerator,5/1/2022,,https://www.scoop.co.nz/stories/BU2205/S00212/nexbloc-accepted-into-the-filecoin-faber-accelerator-for-building-out-deep-tech-web-3-0-solutions.htm?from-mobile=bottom-link-01,Filecoin Faber,hkoh0e
NexGen Cloud,gw1fz5,Series A,10/1/2022,15,https://www.finsmes.com/2022/03/nexgen-cloud-raises-14m-in-funding.html,DARMA,kv8oq2
Nextdata,3wnonl,Series A,5/1/2023,12,https://www.businesswire.com/news/home/20230928816800/en/Data-Mesh-Pioneer-Nextdata-Closes-12M-in-Seed-Funding-to-Unlock-the-AI-Revolution-by-Decentralizing-Data-at-Scale,"Acrew, Greycroft","ww4ojj,4vsf2b"
Root Protocol,z1ks7o,Seed,1/1/2022,7.5,https://www.businesswire.com/news/home/20220131005406/en/NFT3-Raises-US7.5-Million-Led-by-Animoca-Brands-Signaling-Decentralized-Identity-Technology-and-NFTs-as-Gate.ioway-to-the-Metaverse,"Animoca, Ankr, CMS, Criterion, Cypher, Digital Finance, Digital Strategies, DoublePeak, Ellipti, Genblock, LD, LVT, Prometheus Laboratories, Shima, Signum, Tenzor, Atesis, Aussie, Automatic, Basics, Cogitent, Jsquare, Master, Matterblock, MH, Token Bay, Trevor Koverko, Unreal, Vendetta, XT Labs","gjt0lb,yxetck,q4ztc2,6uuq9l,798xl8,r2lof0,8e6e1u,18l8yx,knw63n,5dsvsj,qqc9zd,6ewe4i,f4awf9,lhs5s8,oltsrb,52fjgj,9a7u1l,giq489,1e5ima,vcxbpn,bxcu1r,8zouxb,ka4f30,to40x8,b04x9g,dvz6gg,8uix7q,onzcv5,nwl5v7,gy5k6a"
Nirvana,u2tfjc,Preseed,5/1/2023,1.2,https://twitter.com/nirvanalabsai/status/1724840469631258795,"Lattice, Varys","q9qqsj,6mh2rx"
NodeOps,7qgg1c,Seed,05/27/2024,5,https://x.com/NodeOps_App/status/1795199359132311642,"L1 Digital, Blockchain Founders Fund, Finality, Oak Grove, Double Peak, Skyland, Momentum 6, Bitscale, Jaynti Kanani, Richard Ma","hmfg3c,b2ybqs,074afi,1p1iry,n0g582,km32gq,bah2fw,2tgqti,yfrryp,wo10nx"
NodeShift,eivutq,Seed,02/22/2024,3.2,https://twitter.com/nodeshiftcloud/status/1760572580862280007,"Inovo, Notion, 10X, Kestrel0x1, Epic Games, ","a1h612,vbyb2i,h09snm,3wmu8j,9sg91a"
Nodle,znawjs,Seed,9/1/2018,1.5,https://www.globenewswire.com/news-release/2018/09/13/1570282/0/en/Nodle-io-Raises-1-5M-Seed-Funding-to-Bring-IoT-Cryptocurrency-to-App-Developers.html,"Blockchange, Blockhead, Bootstraplabs, Olymp, Mark Pincus, Yeoman's, Workplay","hbpmm3,lxp1f3,o2wub8,n4ia7o,mlmbyn,29e40w,ncwxhv"
NoorNation,dwfwvv,Accelerator,6/1/2023,0.02,https://www.thecatalystfund.com/insights-blog/why-we-invested-in-noornation-a-startup-providing-farmers-with-solar-energy-and-water-solutions-in-egypt,"PepsiCo, Catalyst","7vyg7l,e4n54t"
Nosh,k270zx,Preseed,3/13/2023,1,,"Escape Velocity, Lattice","7zvxz8,q9qqsj"
Numerai,lw588k,Seed,3/1/2019,11,https://www.theblock.co/linked/16868/hedge-fund-numerai-raises-11-million-in-funding-from-placeholder-paradigm,"Placeholder, Paradigm, Union Square","bku3ew,tfi9fe,vuz4in"
NuNet,6wpm8m,Preseed,2/1/2022,2,https://ibsintelligence.com/ibsi-news/singularitydao-debut-project-on-launchpad-nunet-closes-2m-usd-sale-in-90-seconds/,"Cardano, Alphabit, Clever, Contango, Illuminati, Magnus, Moonrock, Newtribe, SMO","nrotlx,o5kpgb,u2w7b1,2bl1fj,xdw0yr,243kcn,n73vnt,65epfb,tktadr"
Nutbox,45u6hy,Preseed,7/1/2021,,,"Metric Architecture, Waterdrip","zz1yde,o7xcsr"
Nym,5gc718,Seed,5/1/2019,2.5,https://www.coindesk.com/business/2019/05/13/nym-technologies-raises-25-million-to-anonymize-crypto-apps/,"1kx, Eden Block, KR1, Lemniscap, Maven 11, NGC, Tioga","bspyld,jitv3q,ujw2s3,kjm7ph,xgzede,07pxi6,llojfj"
Nym,5gc718,Series A,11/1/2021,13,https://techcrunch.com/2021/11/19/nym-raises-13m-from-a16zs-crypto-fund/,"3X, a16z, Bigcoin, Chorus One, DCG, Fenbushi, Figment, GreenfieLD, Hashkey, Huobi, Polychain, Tayssir","pdp1mt,d40or5,k8v3go,la4mmt,apd14v,mywjsu,uwuv2v,wir0cg,nxzb7m,t7xkdd,tqh3bl,c69vl1"
Only1,ennb7m,Seed,05/01/2021,,https://crypto-fundraising.info/projects/only1/?utm_source=tgtw&utm_medium=post&utm_campaign=project,"PetRock, NGC, GBV, DuckDAO, Alameda","4u100f,07pxi6,rlo5x9,yi5hs8,b5zojp"
Only1,ennb7m,Seed,10/01/2021,3,https://crypto-fundraising.info/projects/only1/,"Ellipti, Satori Research","knw63n,uc3rf3"
Only1,ennb7m,Strategic/Angel,04/21/2024,1.3,https://twitter.com/JoinOnly1/status/1781942452733231465,"Newman, Folius, Modular, PetRock, NaniXBT, MapleLeafCap, Adrian Lai, Paul Kim","pnypo2,ifb7yv,p99cdg,4u100f,o7v664,0wwz1m,cv4dev,uce2yg"
Onocoy,n77nem,Accelerator,7/1/2023,,https://www.startupticker.ch/en/news/onocoy-wins-100-000-from-eu-agency-space-program,European Union,k9wwxc
Oort,apu26o,Series A,10/1/2022,15,https://cybermagazine.com/articles/enterprise-security-startup-oort-raises-15m-in-series-a-fun,"406 Ventures, Energy Impact, Cisco, 645 Ventures, Bain, First Star, LinkVC, Redline, Sanctor, Waterdrip, Aves Lair","wrgnv3,eyf1w2,x4fp89,zbfwcv,3o9fr1,q2r9ba,9205ui,7rf9rs,m05wan,o7xcsr,juclgr"
Opolis,ees7sx,Seed,7/1/2023,6.6,https://www.businesswire.com/news/home/20230713231230/en/Blockchain-Employment-Platform-Opolis-Raises-6.6M-in-Bridge-Round,"NEAR, Draper Associates, Polygon","b6vnn8,uwmmpg,8agdnp"
Ora,l6awms,Seed,1/1/2023,3,https://www.theblock.co/post/204061/sequoia-china-and-dao5-back-zk-startup-hyper-oracle,"dao5, Foresight, FutureMoney, HongShan, Skyland, SevenX","r54jbx,uktppp,6c0yfx,3xr5rh,km32gq,pu3yyr"
Orbofi AI,1sydts,Seed,5/1/2023,2.8,https://www.theblock.co/post/232259/leading-the-ai-revolution-in-Web3 Capital-orbofi-ai-raises-2-6m-in-high-profile-funding-round,"Cogitent, CSP, Halvings, OIG, Zephyrus","bxcu1r,6hezki,b57s8m,pxs0xw,e0wtte"
Pano AI,111p2s,Seed,1/1/2021,8,https://techcrunch.com/2022/09/19/pano-ai/,"Climate, Referent","4zunln,tcaja1"
Pano AI,111p2s,Series A,7/1/2023,17,https://techcrunch.com/2023/07/10/pano-series-a-extension/,"5G Open Innovation Lab, Salesforce","uog43p,6d2jcm"
Pano AI,111p2s,Series A,9/1/2022,20,https://techcrunch.com/2022/09/19/pano-ai/,"Andrew Uher, Congruent, Convective, DCVC, GoodLight, Initialized, Jade van Doren, January, Joseph Thomas, Kevin Mahaffey, Mark Leslie, Oleg Rogynskyy, Ozone X, Plug and Play, Quiet, Salesforce, Sytse Sijbrandi, T-Mobile, Valor, Zachary Bookman","dbnjzb,z29ewp,xz7t5c,ambkkn,74s00h,r6v4in,bcamtz,n1w9x7,q5m1p9,9pb2mx,grut3l,kr9pzv,qmk67p,w19rhh,gdty4y,6d2jcm,3te3nj,o6rvj3,qf539o,hhcvbz"
Peaq,vx7fas,Private/Public token sale,05/09/2024,19.98,https://coinlist.co/peaq,,
Peaq,vx7fas,Seed,06/28/2022,6,https://www.coindesk.com/business/2022/06/28/web3-network-peaq-raises-6m-led-by-fundamental-labs/,"Fundamental Labs, Hashkey, GSR, Delta-v, Mulana, Cypher, GravityX, Waterdrip, Ceras, Master, Moonrock,","n5z0zx, nxzb7m,v81ftp,7eqfdf,4dh0t9,798xl8,mlhi9g,o7xcsr,xvqjcw,ka4f30,n73vnt"
Peaq,vx7fas,Series A,03/27/2024,15,https://www.theblock.co/post/285001/depin-layer-1-peaq-raises-15-million-in-pre-launch-funding,"Generative, Borderless, Spartan, HV, CMCC Global, Animoca, Moonrock, Fundamental Labs, TRGC, DWF, CRIT, Cogitent, NGC, Agnostic, Token Metrics,LBank Labs","jki94w,buo8ql,pgoyl5,fn2hky,l70dye,gjt0lb,n73vnt,n5z0zx,nzxtym,i98114,1k9g0d,bxcu1r,07pxi6,eq458r,8dhvoo,89glxu"
Petastic,g32gdz,Seed,1/1/2020,2.5,,"Tess Ventures, Blockchain Founders Fund, Warburg Serres, Tiny, Escape Velocity","lzpnns,b2ybqs,gduv1m,j5aqjt,7zvxz8"
Petastic,g32gdz,Seed,6/1/2023,3,,"Escape Velocity, Warburg Serres, Nestle","7zvxz8,gduv1m,4awgkj"
Phala,2zgyts,Seed,9/1/2020,10,https://medium.com/phala-network/phala-network-value-tops-10-million-on-new-fundraising-31a8c25f9bb9,"BiShiJie, Blue7, Dots, Incuba Alpha, IOSG, KR1, Optimista, SNZ, WAGMi, Waterdrip, Wujilian, Candaq","x7bb3n,wxcf8r,ebviw5,q9nh9n,i1x9du,ujw2s3,9ptsrm,wu15kr,nlvx3r,o7xcsr,4yr483,h3elac"
Photon,0k8gq4,Preseed,1/1/2022,,,"A&T, Bitrise, Caballeros, IMO, Kernel, NGC, Signum, Timestamp, UOB","1zgufc,h2tvqq,wldl30,d2hp6f,yv5v8q,07pxi6,oltsrb,3dhuwv,bix4ir"
Planetwatch,qxqpla,Preseed,5/1/2020,0.66,,"Borderless, Clever, Cognitive Blockchain, Meld, Ra.Mo, Algorand","buo8ql,u2w7b1,tuqdxz,j74kap,2lb530,s7b833"
Planetwatch,qxqpla,Seed,1/1/2023,3.21,https://www.globenewswire.com/en/news-release/2023/01/26/2596408/0/en/PlanetWatch-Raises-3M-to-Boost-Business-Development.html,"Algorand, Algorand, Elves Long Term","s7b833,s7b833,rx31o6"
Plural,5uioqo,Preseed,05/30/2024,2.3,https://x.com/PluralEnergy/status/1796199500912238827,"Compound, Necessary Ventures, Volt, Maven 11, ","mqgff4,g2rt17,gasfop,xgzede"
Pokt,wreq2k,Seed,1/1/2022,10,https://www.coindesk.com/business/2022/01/06/crypto-infrastructure-firm-pocket-network-raises-10m/,"Republic, RockTree, Arrington, C2, Eden Block, Zee Prime","unykak,gr67ka,csfyvy,7efyp0,jitv3q,urug6u"
Pokt,wreq2k,Series A,11/1/2023,7.9,https://www.coindesk.com/business/2023/11/30/decentralized-infrastructure-provider-grove-raises-79m/,"Avon, Placeholder, Druid","9du4gx,bku3ew,j1rzkc"
Pollen Mobile,goiapt,Seed,4/1/2022,,https://www.globenewswire.com/en/news-release/2022/04/19/2424680/0/en/Pollen-Mobile-Closes-Seed-Funding-Round-for-Its-Next-Generation-Decentralized-Wireless-Network.html,"Slow, DISH Wireless, Delphi Digital, OVN, Acorn Pacific","ooq1d1,391xou,67mqz0,s7axdr,ul3tww"
Ponder,84yzdf,Private/Public token sale,,1.25,https://cryptorank.io/ico/ponder,,
Portalverse,6uwhcg,Seed,7/1/2022,2,https://medium.com/@PORTALVERSE_NETWORK/decentralized-cloud-gaming-platform-portalverse-network-closes-multi-million-dollar-seed-funding-776b050399cb,"2Moon, Big Brain, Cogitent, Fusotao, NEAR, Octopus","oby8hh,4l8mmr,bxcu1r,nuolrg,b6vnn8,n9t6zl"
Poseidon,hosx2o,Accelerator,8/1/2019,,https://www.techinasia.com/5-blockchain-startups-longhash-raise-9m,LongHash,po8xe3
Aimelia,,Preseed,1/2/2024,0.5,https://crypto-fundraising.info/projects/predx/,"Penrose Tech, Mulana","dd27ab,4dh0t9"
Aimelia,7x1eif,Preseed,02/29/2024,0.5,https://www.odaily.news/newsflash/356564,"Penrose Tech, Mulana","dd27ab,4dh0t9"
Prime Intellect,qjinko,Seed,04/23/2024,5.5,https://twitter.com/PrimeIntellect/status/1782772983712379328,"Distributed Global, CoinFund, Compound, Collab+Currency, Protocol Labs","sknhsa,szfiug,mqgff4,zaf9xh,ti312b"
Privasea,2qrtt6,Private/Public token sale,03/15/2024,0.45,https://cryptorank.io/ico/privasea,,
Privasea,2qrtt6,Seed,03/04/2024,5,https://www.privasea.ai/blog-posts/privasea-raises-5m-to-pioneer-depin-with-fheml-technology,"Binance, MH, Basics, Gate.io, DuckDAO, Dewhales, K300, Zephyrus, 1NVST, Crypto Times, ","mrgeec,b04x9g,vcxbpn,i1vs03,yi5hs8,jux8mr,gi55pp,e0wtte,56gubq,tuxed4"
Privasea,2qrtt6,Strategic/Angel,03/12/2024,,https://twitter.com/danu_ventures/status/1767563627446284546,Danu,uqjmp6
Privasea,2qrtt6,Strategic/Angel,04/04/2024,,https://twitter.com/Privasea_ai/status/1775882408031584362,"OKX, Laser Digital, Tane Labs","smqwtv,fhd6hx,ot4bu5"
Proof of Play,f0g5ra,Seed,9/1/2023,32.7,https://venturebeat.com/games/proof-of-play-raises-33m-for-Web3 Capital-rpg-adds-ex-twitch-ceo-to-board-emmett-shear/,"a16z, Balaji Srinivasan, Diogo Monica, Gabby Dizon, Greenoaks, Immad Akhund, Justin Kan, Justin Waldron, Naval Ravikant, Nikil Viswanathan","d40or5,896jil,ub70vu,aeoxcb,0a3jap,gcq9cr,0e5as0,soken3,co49ki,2nph6s"
Prophetic,n08otn,Preseed,11/1/2023,1.1,https://fortune.com/2023/11/30/lucid-dream-startup-prophetic-headset-prepare-meetings-while-sleeping/,"BoxGroup, Escape Velocity, O'Shaughnessy, Scout","q8z49k,7zvxz8,tm04se,dwir0a"
ProximaX,nwrj6s,Seed,4/1/2018,33.7,https://www.globenewswire.com/en/news-release/2018/06/04/1516295/0/en/NEM-Based-Decentralized-Application-Platform-ProximaX-Lists-on-Kryptono-Exchange.html,"8 Decimal, Youbi","2q8xba,pcw959"
PublicAI,11aqyc,Seed,1/1/2024,2,https://www.theblock.co/post/274838/Web3 Capital-distributed-ai-training-network-publicai-raises-2m-in-seed-funding-round,"IOBC, Foresight, Solana, Everstate","lp0gdl,uktppp,tlb60n,430dvj"
PureFi,5u6ch6,Preseed,7/1/2021,,,"Infinity, Infinity, Master","rrtsc3,rrtsc3,ka4f30"
Push,nhurl1,Preseed,12/8/2020,0.75,https://medium.com/push-protocol/ethereum-push-notification-service-successfully-raises-750k-usd-in-seed-round-bec41eadd84d,"Ajit Tripathi, Andrew Chen, Anthony Sassano, AU21, Auryn Macmillan, Balaji Srinivasan, Ben Lakoff, Binance, Bitscale, Bixin, BR, D64, Danny Christ, Darq, DeFi Dad, DeltaHub, Evgeny Zandman, Fourth Revolution, Ganeshram Gunalan, IOSG, Kaito Kaito, Kathik Garg, Kenneth Ng, LD, Luka Sučić, Mariano Conti, MetaCartel, Momentum 6, Moonwhale, Pareen Lathia, Preethi Kasireddy, Ravindra Kumar, Sandeep Nailwal, Scott Moore, The LAO, Thomas Kaseng Ao, Travis Blane, TRUE","h6uwpw,bonru9,cd2nay,xmw0ev,ntqe0t,896jil,2slnxb,mrgeec,2tgqti,gun7y3,oi4yuk,3yr1j5,y6x2dz,1k4qxq,lkgkfl,35e9e6,8l2m10,1b7u42,9kbvyo,i1x9du,3z06cc,n463s0,dbnrgb,qqc9zd,5kunmp,mlsidm,oxjxo0,bah2fw,dd123i,d6llvy,t0itsl,m8xiuk,9e1gk4,xph9q9,e2dh7y,jtcw6t,hc7wxh,zim0bv"
Push,nhurl1,Seed,4/1/2022,10.1,https://www.coindesk.com/business/2022/04/14/ethereum-push-notification-service-raises-10m-at-131m-valuation/,"A.Capital, Alpha Wave, Anton Bukov, Bison, BlackDragon, CoinDCX, GD10, Harmony One, iSeed, Jump, MetaCartel, Mindfulness, Moonlanding, ParaFi, Polygon, Ryze, Sahil Dewan, Signum, Tiger Global, TRGC, Wintermute, Woodstock, YBB, Zebpay, Zee Prime","92ar5l,vstg5d,h477gr,puuj5e,8nclhv,5d2mm5,okjrd0,curksv,2x1lbw,4ssdn4,oxjxo0,vfifi9,n7xol2,6f2cxt,8agdnp,06o6kd,z25ee2,oltsrb,rotj2h,nzxtym,s812zr,2wn9ev,935mux,71p088,urug6u"
Pyth,5fwmoi,Preseed,7/1/2021,,,"Gate.io, GBV, Republic, Staking Facilities, Tagus, Two Sigma, Binance","i1vs03,rlo5x9,unykak,gmkv01,oqc7x3,1o6h98,mrgeec"
QnA3,zllg2h,Accelerator,03/08/2024,,https://twitter.com/BinanceLabs/status/1766011339665821736,Binance,mrgeec
Quadency,8tp7y2,Preseed,2/1/2021,0.1,https://www.Bitcoin.cominsider.org/article/105546/quadency-trading-platform-gets-100000-seed-funding-dash-dash,Dash,4dqura
Radicle,n2u1ny,Seed,1/1/2018,,,"BlueYard, Caballeros, Cherry, Placeholder","jo973z,wldl30,67fqhy,bku3ew"
Radicle,n2u1ny,Series A,2/1/2021,12,https://www.theblock.co/linked/95295/open-source-radicle-12-million-galaxy,"Balaji Srinivasan, Coinbase, CoinFund, eGirl, Electric, Fisher 8, Galaxy Digital, Giant, Hashkey, Inflection, Meltem Demirors, Naval Ravikant, NFX, Notation, ParaFi, Crypto3, Fenbushi, Warburg Serres","896jil,73opsz,szfiug,kk8zod,z6cdtc,67nk5m,44e83n,1ojs3d,nxzb7m,e7om6t,ivtzio,co49ki,2vjau8,t105wi,6f2cxt,7k7kbw,mywjsu,gduv1m"
Raiinmaker,bw9zs2,Seed,04/03/2024,7.5,https://www.theblock.co/post/285900/jump-capital-7-5-million-seed-round-web3-ai-firm-raiinmaker,"Jump, Cypher, GDA, Gate.io, MEXC, Krypital, Alphabit, Newtribe, Sheesha, Arcanum, NxGen, Coach K, Axia8, Alpha Sigma, Launchpool, Stealth Capital, Basics, Alpha Capital, K300, Andromeda, Titans, Taisu, Bella, Candaq, Dutch Crypto, Green Arrow, 7 O'clock, SeedThrift, Spicy","4ssdn4,798xl8,dm8n2p,i1vs03,d0dwes,qu9as2,o5kpgb,65epfb,nr57n8,m8rgyb,rgk0ot,ncqu3d,ajbv45,buime9,ehuolk,hx0vv3,vcxbpn,b18i62,gi55pp,ydmvp5,xxi1ub,5nt3w6,hep9cj, h3elac,chxmjc,jkznu6,z2j0xs,czlpsy,chjkg7"
RAK,v959ss,Seed,3/1/2017,1.45,,"Chuango, QM","gyce3n,yv9j5t"
RAK,v959ss,Series A,4/1/2021,10,https://www.prnewswire.com/news-releases/rakwireless-closes-10m-series-a-funding-round-301276301.html,"NWS, Shunwei","ztuz2u,u98nrn"
Rapidata,y47135,Seed,7/1/2023,1.69,https://www.venturekick.ch/Rapidata-raises-CHF-15-million-in-funding-round-led-by-BlueYard-pioneering-the-creation-of-a-human-brain-in-the-cloud,"Acequia, BlueYard, Venture Kick, Wingman Campus","ibk8eu,jo973z,knt2wt,3qwz70"
Raven,r3vxyu,Seed,5/1/2019,,https://medium.com/ravenprotocol/the-raven-protocol-launch-e2f70faf5bfd,"NGC, Tel Aviv, Moonchain, SEAL, Naas, Cluster","07pxi6,vy6zxu,bx0fk3,fode7i,ty5rkd,vax8ny"
Really,twhfdd,Seed,2/1/2023,18,https://www.prnewswire.com/news-releases/really-announces-18-million-seed-round-brings-the-sharing-economy-to-mobile-phone-service-301757834.html,"Polychain, FloodGate, Habitat, Capital Factory, Alumni, Moonshots","tqh3bl,vydmt3,1bq4ds,fyqab6,4bc5rd,wlpny1"
RedStone,ap3amn,Preseed,7/1/2021,0.53,https://www.prnewswire.com/news-releases/redstone-raises-525k-in-first-round-of-funding-to-expand-its-market-leading-next-generation-decentralized-oracle-platform-301332129.html,"1kx, Arweave, Bering Waters, Collider, KR1, Maven 11","bspyld,hhudw8,5b7spr,kaftnr,ujw2s3,xgzede"
RedStone,ap3amn,Seed,8/1/2022,7,https://www.coindesk.com/business/2022/08/29/defi-platform-redstone-raises-nearly-7m-to-improve-connectivity-between-blockchains-real-world-data/,"4 Seasons, Blockchain Capital, Coinbase, Compute, Distributed Global, Folius, Lattice, Lattice, Lemniscap, Numeus, Permanent, SevenX, The Graph, Alex Gluchovski, Coinflip, Emin Sirer, Jacob Blish, Justin Reyes, Marco Cora, Patrick Dai, Richard Ma, Sandeep Nailwal, Stani Kulechov","4j4oj3,te4xtz,73opsz,maid89,sknhsa,ifb7yv,q9qqsj,q9qqsj,kjm7ph,vt618a,nym997,pu3yyr,ffngjj,cyv0j9,fadhn8,ia3tqb,zk01ag,rp0ik4,gfrejr,yo6dj6,wo10nx,9e1gk4,3bchmx"
Renatus,83jvhp,Seed,5/1/2023,2,https://www.therobotreport.com/renatus-robotics-announces-2-million-in-seed-funding-for-autonomous-logistics-solutions/,"Dawn, e-LogiT","my802w,9yr6ry"
Render,drs2bu,Series B,5/1/2010,2.5,,,
Render,drs2bu,Series C,7/1/2012,25.73,,"Autodesk, Yuri Milner","wc0r1f,58oane"
Render,drs2bu,Series D,2/1/2014,25,https://www.prnewswire.com/news-releases/cloud-graphics-pioneer-otoy-announces-series-d-round-led-by-yuri-milner-245185301.html,"Yuri Milner, Roddenberry Trust, Autodesk, John Mack, Taylor Frigon, Discovery Communications, DST, George Gilder","58oane,h7bj9w,wc0r1f,7c2xqy,vrprdr,xqdbmz,winl2g,ja06z4"
Render,drs2bu,Series E,4/1/2016,38.9,,"HBO, Discovery Communications, Liberty Global, Disney","etiakl,xqdbmz,80vsaw,vkfbt5"
Render,drs2bu,Series F,12/1/2021,30,https://www.theblock.co/post/128266/metaverse-infrastructure-startup-render-network-raises-30-million-in-token-round,"Multicoin, Alameda, Solana, Sfermion, Vinny Lingham, Bill Lee, Borderless, Digital Finance, FJ Labs, NGC, Spice, Token","2g0699,b5zojp,tlb60n,emg882,natuqc,zo7roo,buo8ql,r2lof0,h58ujg,07pxi6,4e1ldf,6dsjxk"
RingFence,v84vfv,Seed,1/1/2024,1.5,https://crypto.news/ringfence-announces-1-5m-raise-to-empower-and-reward-creators/,"Rarestone, MorningStar, Curiosity, Noir, Spark Digital","h9g1s5,k9u90q,q1nyr0,y5iv53,pyukl2"
Ritual,ntppvh,Seed,11/8/2023,25,https://finance.yahoo.com/news/former-polychain-partners-raise-25-130000001.html,"Archetype, Accomplice, Robot, Escape Velocity","ze1wdg,6x081t,eyy236,7zvxz8"
Ritual,ntppvh,Series A,04/08/2024,,https://www.coindesk.com/business/2024/04/04/crypto-vc-firm-polychain-tops-up-ai-platform-rituals-25m-funding-round-with-multimillion-dollar-investment/,Polychain,tqh3bl
RSS3,1tdy5h,Seed,12/1/2021,7.96,,"Arweave, Ateliesi, Avatar Ventures, Avalanche, Balaji Srinivasan, Coinbase, CoinShares, Continue, Dapper Labs, Dragonfly, Fabric, Formless, Fundamental Labs, Hash Global, Hashkey, Headline, Huobi, imToken, Incuba Alpha, Infinity, linker, Longling, Mai Fujimoto, Mask Network, Meteorite Labs, Rhizome, Scott Moore, SevenX, Sky9, Jiho, Winkrypto, Y2Z, Youbi","hhudw8,5b00r6,b9h5l3,abvcou,896jil,73opsz,skjtm0,2ckrz9,2mccdz,5tj4jx,4x7qfo,6ln74n,n5z0zx,us9d7q,nxzb7m,zagn6s,t7xkdd,w9dy7u,q9nh9n,rrtsc3,aiqhf6,jynpbk,qxfsh5,thxgaw,d85f6i,l73dc6,xph9q9,pu3yyr,m5cayq,eehu3u,6m0hgx,oa0h6s,pcw959"
RSS3,1tdy5h,Series A,4/1/2023,10,https://www.coindesk.com/business/2023/04/11/information-protocol-rss3-raises-10m-via-token-sale-to-dwf-labs/,DWF,i98114
Runloop,f9rhe0,Seed,11/1/2021,3,,"a16z, CNK, DCG","d40or5,9cx72l,apd14v"
Rymedi,aexn5y,Seed,8/1/2023,9,https://www.biospace.com/article/releases/rymedi-raises-9m-to-expand-impact-on-global-healthcare-infrastructure-with-advanced-blockchain-secured-data-platform/,"Blizzard, Blockchange, Catalytic Impact, ImpactAssets, RW3, White Star","ltitbn,hbpmm3,spe24s,l2sa3p,pixi8p,o3c9bd"
Sahara,a2h6y8,Seed,03/05/2024,6,https://chainwire.org/2024/03/05/sahara-raises-6-million-seed-round-to-democratize-global-knowledge-capital-access-through-ai-and-blockchain-technologies-led-by-polychain-capital/,"Polychain, Sequoia, Matrix, Samsung NEXT, dao5, Geekcartel, Nomad, Canonical Crypto, Motherson, Dispersion, Alumni, Tangent, Coho Deeptech, Sandeep Nailwal","tqh3bl,vf0qg4,ikeqay,1im0oz,r54jbx,7zxuth,zoshoo,596ql7,yodrbc,9oo0xs,4bc5rd,6fx6k3,bax7uz,9e1gk4"
Sapien,k2xr2i,Seed,04/10/2024,5,https://www.prnewswire.com/news-releases/ai-company-sapien-raises-5-million-to-gamify-data-labeling-for-ai-302112788.html,"Primitive, Animoca, Artichoke, YGG","xl9a26,gjt0lb,e3qzk9,nv73pg"
Sapien,k2xr2i,Seed,04/10/2024,5,https://www.sapien.io/blog/ai-company-sapien-raises-5-million-to-gamify-data-labeling-for-ai,"Primitive, Animoca, Artichoke, Yield Guild Games","xl9a26,gjt0lb,e3qzk9,vnlyks"
Sarcophagus,se7wj7,Seed,12/1/2021,5.47,https://decrypt.co/90032/crypto-dead-mans-switch-sarcophagus-raises-5-47m-from-vcs-via-dao,"Arweave, Blockchange, Compound, Infinite, Infinite, Inflection, Lattice, LD, Lo Enterprises, NxGen, Placeholder","hhudw8,hbpmm3,mqgff4,fxmvug,fxmvug,e7om6t,q9qqsj,qqc9zd,vdyl97,rgk0ot,bku3ew"
SecondLive,6qvjpf,Seed,11/1/2021,,https://www.prnewswire.com/news-releases/secondlive-raises-at-30m-valuation-in-the-seed-round-to-build-social-metaverse-301414217.html,"ArkStream, Binance, BitValue, Bullet Labs, CGV FoF, CSP, Cypher, GBV, Illuminati, LucidBlue, Multiplex, Newtribe, Old Fashion, Pow Rise, SEJO Asset, Y2Z, Yuanyuzhou","zloyr1,mrgeec,2f68vj,9jmx43,xml0tr,6hezki,798xl8,rlo5x9,xdw0yr,lkbsw0,qu6tvr,65epfb,ukwp87,40gzi4,karrrt,oa0h6s,q6mxh8"
Sending Labs,xe4qlj,Seed,04/16/2024,7.5,https://www.theblock.co/post/288617/depin-project-sendingnetwork-crypto-funding,"Nomad, Symbolic, Web3.com, Galxe, SWC, Balaji Srinivasan, Gabby Dizon","zoshoo,otzp4l,lay4ny,geps91,9j6x8e,896jil,aeoxcb"
Sending Labs,xe4qlj,Seed,16/2/2023,12.5,https://www.coindesk.com/business/2023/02/16/web3-communication-stack-sending-labs-raises-125m/amp/,"Insignia, MindWork, Signum","4uri7e,mxwn86,oltsrb"
Shadeform,d4dfm9,Preseed,9/1/2023,,,"Gravity, Kevin Moore, TransLink, Unpopular","bqmpxo,551q4x,v5apl7,rsenx1"
Shardeum,g65u6w,Series A,7/1/2022,18.2,https://shardeu.org/blog/shardeum-raises-18-2-million-in-seed-round-funding-from-50-investors/,"Ajeet Khurana, Balaji Srinivasan, Big Brain, Cogitent, CoinGecko, CSP, Digital Finance, Dutch Flower, Foresight, Ganesan Swaminathan, Ganesh Swami, Ghaf, Harsh Rajat, Jane Street, Jsquare, Kashif Raza, Kube, Mapleblock, Mayur Gupta, MH, Michael Montero, Nakul Gupta, Nestcoin, NetZero, Pankaj Gupta, Ravi Adusumalli, Rohan Chauhan, Spartan, Struck, Tupix, Veris, Vijay Maharajan, Wemade, Yele Bademosi, Zebpay","oixym4,896jil,4l8mmr,bxcu1r,uwgwnq,6hezki,r2lof0,nuuvcg,uktppp,zart5o,zf8iq9,jcbbxl,l4gut1,cji8w5,8zouxb,vxrpsy,q84v53,tzyxtr,jf4tai,b04x9g,l307ry,gii6no,sby0uo,fnlug2,cckw2g,ggh7wv,f5e4m8,pgoyl5,n0wdkb,7i7ead,monvfg,kh8jxd,t9lvtn,phgssx,71p088"
Shardeum,g65u6w,Series A,7/1/2023,5.4,https://shardeum.org/blog/shardeum-completes-5-4-million-strategic-raise/,"Amber, Blockchain Ventures Hub, Blue7, Contango, Criterion, CryptoViet, Galxe, Hyperithm, J17, Luganodes, Red Beard, Tane Labs, TRGC, Zephyrus","z37132,geipr5,wxcf8r,2bl1fj,6uuq9l,enemyk,geps91,90k6bh,ldzkf8,dgr3qv,6cp8be,ot4bu5,nzxtym,e0wtte"
Shibuya,rgobsb,Seed,11/1/2022,6.9,https://decrypt.co/116749/pplpleasrs-shibuya-nft-video-platform-raises-6-9m-to-build-the-a24-of-Web3 Capital,"a16z, gmjp, Joe Tsai, Kevin Durant, Stani Kulechov, Variant","d40or5,bt0gqk,0rupj0,d6m812,3bchmx,ubuz3j"
Sia,esjdj0,Seed,7/10/2019,3.5,https://www.coindesk.com/markets/2019/07/10/sia-network-raises-35-million-from-bain-capital-to-become-crypto-hulu/,"Bain, Bessemer Investors, Dragonfly","3o9fr1,evc5sc,5tj4jx"
Siglo,7gjqft,Seed,10/1/2021,4,,"Acequia, Asymmetry, Canary, Cartography, Cristian Raygoza, Goodwater, Iluminar, Immeasurable, Integra, Lan to, Leonis, Outbound, Soma, Dupe","ibk8eu,l6myld,tzp7ne,dhr2z2,yqrwim,x10a41,zmmaj6,3j9dp1,p4hs0l,hyymt5,0gxopv,m8wx40,rgrylg,ud2iej"
Silencio,5m6dp8,Preseed,18/2/2024,1,https://twitter.com/silencionetwork/status/1759201491821240687,"Borderless, Moonrock, MV Global, Cogitent","buo8ql,n73vnt,lhjpo7,bxcu1r"
SingularityNET,48m8lh,Seed,4/1/2021,2.7,https://cryptoslate.com/press-releases/singularitydao-raises-2-7m-in-private-sale-led-by-alphabit-to-usher-ai-driven-defi/,"7 O'clock, Alphabit, AU21, Clever, Cypher, DWF, GBV, Illuminati, Jun, LDA, Magnus, Moonwhale, Newtribe, Optimista, QCP, SMO, Algalon, Alpha Sigma, Ben Kalsky, David Hockley, Decentral Park, Jeff Ward, Marco Carrubba, Maximus Richardson, Mike Costache, Mike Cummings, Rebel, Zeroth.ai","z2j0xs,o5kpgb,xmw0ev,u2w7b1,798xl8,i98114,rlo5x9,xdw0yr,e9qwvr,8kqjbk,243kcn,dd123i,65epfb,9ptsrm,17wi5y,tktadr,fdepqs,buime9,qi3rfl,7itbm5,3b0ihr,oee9lj,ct9jfu,xc3d4p,m5j9oz,p6t4kv,eofkvo,myul3m"
SingularityNET,48m8lh,Series A,5/1/2022,24.9,https://www.coindesk.com/business/2022/05/19/singularitynet-singularitydao-receive-25m-to-accelerate-ai-backed-defi/,"LDA, Optimista","8kqjbk,9ptsrm"
Sinso,tde0ef,Seed,1/1/2022,,,"AAD, AB, Angelone, Automatic, BCA, Coincu, DCT, Doble J, ICI, INV, Leland, MZ Web3, Oracles, TA, Unity, Vespertine, Yellow Spoon","ovna62,s8v8am,x07tqh,1e5ima,wpebfi,03ew5g,gpswp8,v25i1p,y1thi4,4khk4w,hqbyqg,asmbxg,pwuofb,z845oa,x5h9ow,nj1v3c,ka28kz"
Sitenna,xeu3zu,Seed,5/1/2023,3,https://www.siliconrepublic.com/start-ups/sitenna-funding-telecoms-5g-us-atlanta-canada-expansion-limerick,"Rebel, Merus, Samsung NEXT, YC","eofkvo,ncxg2x,1im0oz,1r0cdr"
Skillful,8lb0be,Private/Public token sale,,0.2,https://cryptorank.io/price/skillfulai,,
Smlxl,x6phis,Series A,7/1/2021,13.4,https://fortune.com/crypto/2023/10/24/smlxl-a16z-dor-levi-lyft-blockchains-funding-round/,"Amos Meiri, a16z, Eisar Lipkovitz, Elad Gil, Emilie Choi, Greylock, Jana Messerschmidt, Naval Ravikant, Node, Quint, Ran Makavy, Robert Leshner, Roham Gharegozlou","rny435,d40or5,lmdm54,ul6tyf,jwgb9c,419x6r,izhh27,co49ki,3cjty6,uulo45,ta1eea,sz5x0j,k8lm1b"
Solak,6om468,Strategic/Angel,03/12/2024,,https://twitter.com/solakgpt/status/1767415726510665865,"DWF, Oddiyana, IBC Group","i98114,ofj0rs,89f5pk"
Somos,ads6qy,Series A,7/1/2023,13.4,https://latamlist.com/somos-internet-raises-13-4m-seed-round/,"Daedalus, Freddy Vega, Kaszek, Matias Muchnick, Nazca, Pierpaolo Barbieri, Arrive, Envision, K50, Magic","ynh9fg,4q2ow9,nvi3i0,ay6zw8,x59m34,ed6r4e,fxvy7i,9ectn9,0pxgvj,0tzlng"
SONM,qjzgqy,Seed,4/1/2017,42,https://the-blockchain.com/2017/06/18/sonm-raises-42-million-token-raise/,"Aleksandr Kaplun, Algalon, Andrei Ivanouski, Bogdan Alexandrescu, Darius Griffin, Du, Eugene Leontovskiy, Jake Harwood, Simon Wilson, Yevgen Malyshev","k9zddv,fdepqs,59nhq9,44qnji,x3p01b,c94bgn,lagcw0,j5a8b4,t1lahd,nopne6"
SophiaVerse,7bo0uv,Preseed,2/1/2022,,,"Newtribe, Primal","65epfb,zj4ect"
Space & Time,heeyow,Series A,6/1/2022,20,,"Avalanche, CoinDCX, Eterna, Foresight, Framework, Hash#CIB, M12, NGC, NxGen, Polygon, SevenX, Ankr, Bitscale, Bullet Labs, Chainlink Labs, Dispersion, Hashkey, Koji, Stratos Technologies","abvcou,5d2mm5,vw2n89,uktppp,yx4w71,yoijyl,q3nv50,07pxi6,rgk0ot,8agdnp,pu3yyr,yxetck,2tgqti,9jmx43,e3ul8g,9oo0xs,nxzb7m,0k831w,3c4o3d"
Space & Time,heeyow,Series A,7/1/2022,10,https://www.coindesk.com/business/2022/07/28/decentralized-data-platform-space-and-time-raises-10m/,"Alchemy, Alliance, Avalanche, DCG, Fellows.Fund, Finality, IOSG, Samsung NEXT, SK, Framework","opiq98,7ygqh2,abvcou,apd14v,1lob3h,074afi,i1x9du,1im0oz,2abi82,yx4w71"
Spacemesh,ojaphf,Series A,8/1/2021,4,,"CMT Digital, Collab+Currency, Kosmos, Primitive, Tokentus, Alignment, Bancor, BRM, Dekrypt, Gigi Levy-Weiss, iAngels, Slow, Via.Io, Mindfulness","suthoi,zaf9xh,9p60sa,xl9a26,qpv2lq,x2iw8r,5drrpf,xfqvxi,6jj8ov,3qhfkz,ykd20k,ooq1d1,zmowee,vfifi9"
Spacemesh,ojaphf,Series A,9/1/2018,15,https://www.coindesk.com/markets/2018/09/05/polychain-leads-blockmesh-developer-spacemeshs-15-million-fundraise/,"1kx, Arrington, Bain, Coinbase, Collaborative, DHVC, Digital Asset, Dragonfly, Electric, GreenfieLD, gumi Cryptos, Jack Herrick, Lemniscap, NGC, Paradigm, Polychain, Sequoia","bspyld,csfyvy,3o9fr1,73opsz,isf2hj,772xwk,dnu31w,5tj4jx,z6cdtc,wir0cg,y5m26s,vn2xbi,kjm7ph,07pxi6,tfi9fe,tqh3bl,vf0qg4"
Spexi,xjyor4,Seed,10/1/2022,5.5,https://finance.yahoo.com/news/software-firm-spexi-raises-us-085832523.html,"Blockchange, Protocol Labs, InDro Robotics, Dapper Labs, FJ Labs, Tamarack Global, Draft, VentureLabs, Alliance, Vinny Lingham, Adam Jackson, CyLon","hbpmm3,ti312b,z7e0vq,2mccdz,h58ujg,kzp9u0,vuhvkv,mfu4x6,7ygqh2,natuqc,9ubit6,nfgv6v"
Sphere,76qa11,Seed,02/27/2024,2.8,https://twitter.com/sphere_labs/status/1762541489467613656,"TCG, Hudson River, Big Brain, Solana, Steel DAO, Stakeholder, Republic, Cogitent, Anatoly Yakovenko, Rajiv Gokal, Jordan Sexton","ztwm8h,lg8vhc,4l8mmr,tlb60n,5powje,762hpi,unykak,bxcu1r,nxop7l,shz3zr,n6kv8g"
StackOS,kd6pyc,Preseed,4/1/2021,,,"A195, Alphabit, AU21, Block Films, EcoFund, Follow [the] Seed, GravityX, Pantera, LVT, Magnus, Master, Matterblock, Moonwhale, NGC, Part One, PrivaSeed, Protocol, Rarestone, Spark Digital, Three M, x21, Zokyo Studio, Andromeda, NGC","7jssah,o5kpgb,xmw0ev,e3it8b,g9rb5v,5qx1w8,mlhi9g,ozeg73,6ewe4i,243kcn,ka4f30,to40x8,dd123i,07pxi6,0nl0fg,qzj08j,02tq6x,h9g1s5,pyukl2,thqjz1,brmebh,dovucn,ydmvp5,07pxi6"
StackOS,kd6pyc,Private/Public token sale,,5,https://cryptorank.io/ico/stackos-sfx,,
SteerFinance,nfdwqm,Seed,8/1/2022,1.5,https://steer.finance/steer-protocol-raises-1-5m-in-seed-funding-to-revolutionize-off-chain-computing-and-liquidity-management/,"Big Brain, Druid, Republic","4l8mmr,j1rzkc,unykak"
Stepn,9ptjw7,Seed,1/1/2022,5,https://www.theblock.co/post/130953/solana-move-to-earn-stepn-funding,"Sequoia, Folius, Solana, Alameda, 6th Man, Sfermion, Zhen Cao, Santiago Santos","vf0qg4,ifb7yv,tlb60n,b5zojp,hol96b,emg882,tzdukk,ksae6d"
Store,nb0mpn,Preseed,12/1/2018,,,"Alphabit, Ari Nazir, Ari Paul, Matthew Ocko","o5kpgb,9xan1p,p0l4xh,zge5vh"
Store,nb0mpn,Seed,4/1/2021,,,"Big Deal, CSP, Tavis Digital, TeePee, Full Tilt","cpymss,6hezki,rnxt65,el8e09,udnk74"
Storj,arwynb,Preseed,8/1/2014,0.4,https://www.coindesk.com/markets/2014/08/22/cloud-storage-startup-storj-raises-910-btc-in-crowdsale/,"Pavel Cherkashin, Digital, Bitcoin.com","fdbarc,dc26g1,5a1i7n"
Storj,arwynb,Seed,1/1/2017,3,https://www.coindesk.com/markets/2017/02/23/blockchain-startup-storj-targets-enterprise-cloud-with-3-million-raise/,"Google, Qualcomm, Techstars","yont93,tqc1qx,a1uyxq"
Subconscious,5xypv6,Preseed,11/1/2022,,,"Betaworks, BlueYard, Protocol Labs","eqr6sq,jo973z,ti312b"
Subsquid,cp4cw6,Seed,11/1/2021,3.8,https://www.globenewswire.com/news-release/2021/11/12/2333467/0/en/Subsquid-Raises-3-8M-in-Seed-Round-Led-by-Hypersphere-Ventures.html,"0xVentures, ARKN, Criterion, D1Ventures, DIA, Digital Finance, Faculty, Fat Cat, Hypersphere, Illusionist, Jsquare, KodaDot, Lattice, Marin Digital, Momentum 6, Newtribe, Signal, Signum, Smape, Stake Technologies, XT Labs, Zee Prime, Zeitgeist","k93k29,ii5tnv,6uuq9l,m6mz4i,92bx7w,r2lof0,k1qvmn,hxk2ck,vkntey,9xb78i,8zouxb,uqfti3,q9qqsj,qyzsbd,bah2fw,65epfb,44u6gg,oltsrb,oy5ooz,l1cbmz,gy5k6a,urug6u,lll7yl"
Superlocal,3czn02,Seed,3/1/2020,1.5,https://dot.la/superlocal-2650547082.html,"Adam Ayers, DCM, General Catalyst, M13, Rainfall, Slow, SV Angel, Valhalla, Deep Space, NYVP","zmy4gp,jtci9b,hm8wrp,80qehd,3coq1f,ooq1d1,k1e97y,03zdwj,rymjbe,j0d5hc"
Supra,2d4mvd,Accelerator,7/1/2021,1.5,https://www.mastercard.com/news/press/2021/july/mastercard-launches-new-start-path-cryptocurrency-and-blockchain-program-for-startups/,"Berkeley Xcelerator, MasterCard","yva82n,xydyea"
Supra,2d4mvd,Series A,9/1/2023,24,https://cointelegraph.com/press-releases/supra-completes-over-24m-in-early-stage-funding-to-date,"Animoca, BCW Group, Coinbase, FiveT Fintech, Galaxy Interactive, Hashed, Hashkey, Huobi, No Limit, Prosus, Razer, Republic, Shima, Signum, SMO, Sound, Sublime, UOB, Valor, Catenam, a41, Alfa Catalyst, Andromeda, Animoca, Brotherhood, C Squared, CryptoViet, Deeptech, Extra Watts, Fomocraft, Galaxy Interactive, Hashkey, Momentum 6, NGC, Nineyards, Oracles, Plug and Play, Republic, Token Bay, Varys, Zephyrus, Zokyo Studio, Coinbase, DoublePeak, GravityX, JRR, Master, PetRock, Signum, Wave7, SMO","gjt0lb,pqaoc9,73opsz,wrzaj6,nlqu6w,ja2261,nxzb7m,t7xkdd,agwzs7,2bbbj5,cuuxy3,unykak,lhs5s8,oltsrb,tktadr,z8j32q,9wcle7,bix4ir,qf539o,r4uuo1,7bn5bf,ug1ce2,ydmvp5,gjt0lb,0hfvt9,h97beq,enemyk,hc1ro0,qxuz9y,rh0j4p,nlqu6w,nxzb7m,bah2fw,07pxi6,zytdn7,pwuofb,w19rhh,unykak,dvz6gg,6mh2rx,e0wtte,dovucn,73opsz,18l8yx,mlhi9g,z2pfjb,ka4f30,4u100f,oltsrb,ixxo16,tktadr"
Suptho,rku44v,Preseed,8/1/2022,1,https://www.cypherhunter.com/en/e/suptho-raised-funding-2023-01-12/,"Adam Weitsman, Borderless, Cogitent, Delta Blockchain, MH, Orange, Shima, Signum, Tech Garden","auczp7,buo8ql,bxcu1r,drq7a8,b04x9g,izwxxy,lhs5s8,oltsrb,ur9o63"
Sweat Economy,c0amvh,Series A,7/1/2022,13,https://decrypt.co/106142/step-counter-app-sweatcoin-raises-13m-fund-leap-Web3 Capital,"NEAR, Jump, Electric, Spartan, Jump, GSR, Bjorn Wagner, Sandeep Nailwal, Vinny Lingham","b6vnn8,4ssdn4,z6cdtc,pgoyl5,4ssdn4,v81ftp,tk9d0b,9e1gk4,natuqc"
Switchboard,iik6nb,Seed,6/1/2021,3.5,https://switchboardxyz.medium.com/switchboard-raises-3-5mm-seed-and-announces-solana-mainnet-beta-5dc21eefece,"Alameda, Ascensive, Chris McCann, CMS, Collab+Currency, Divergence, JST, Lemniscap, MGNR, Paul Martin, Ryon Nixon, SCC, Taureon, Zeal","b5zojp,bp637k,ybj995,q4ztc2,zaf9xh,0y8voh,17h240,kjm7ph,91q6ri,eg6rtr,2vy35v,u9taet,qi0ovz,7qvbir"
Synesis One,mhf5jn,Seed,12/1/2021,9.5,https://cointelegraph.com/press-releases/synesis-one-raises-95m-to-gamify-ai-data-collection,"Cultur3, Metacartel, Kenetic, Shima, LD, YGG, Tradecraft, A195, GBIC, Alphanonce, NGC, Magnus, Master, Ethernity, AU21, D1Ventures, Linkpad, Efficient Frontier, Kryptos, Kairon Labs, Cipholio, Valhalla, 0xVentures, Baselayer, Trent McConaghy, Gabby Dizon, Alex Alexandrov, Pisit Poosanakhom, Jonah Hong","04mlyu,oxjxo0,micofj,lhs5s8,qqc9zd,nv73pg,t3b3p0,7jssah,kottog,ujq536,07pxi6,243kcn,ka4f30,6gkso9,xmw0ev,m6mz4i,d8iuux,wc20rz,wqz1py,vmlzwp,ri09e0,03zdwj,k93k29,tp01af,og1ppi,aeoxcb,rbndwa,tnqlc5,mdznvx"
Synternet,m9yv19,Strategic/Angel,03/14/2024,,https://twitter.com/Syntropynet/status/1768291299809968491,"CMCC Global, Polygon, HV, Faculty, Wave, Moonrock, DVNCI, TRGC, Mapleblock, Antalpha, Public Works, Goldich","l70dye,8agdnp,fn2hky,k1qvmn,v6xlk7,n73vnt,qzffto,nzxtym,tzyxtr,3t6j16,8p5xkn,zmg095"
Ta-Da,5mgqgs,Seed,1/1/2024,3.5,https://siliconangle.com/2024/01/09/Web3 Capital-ai-data-marketplace-ta-da-raises-3-5m-expand-operations/,"GBV, XVentures, NxGen, Spark Digital, MultiversX","rlo5x9,ytsd3i,rgk0ot,pyukl2,8tzfn7"
Talus,l56q27,Seed,24/2/2024,3,https://twitter.com/talusnetwork/status/1762157302088434040,"Polychain, dao5, Hash3, TRGC, WAGMi, Inception","tqh3bl,r54jbx,qrf4l1,nzxtym,nlvx3r,s4jf02"
Tanssi,zc045a,Seed,5/1/2023,3,https://viewsdao.com/v/Moondance-Labs-Raises-3-Million-in-Seed-Funding-for-Tanssi-Protocol-Development0,"Arrington, Borderless, C Squared, D1Ventures, Fenbushi, Hashkey, Hypersphere, Jsquare","csfyvy,buo8ql,h97beq,m6mz4i,mywjsu,nxzb7m,vkntey,8zouxb"
TEA Project,xmaehz,Preseed,6/1/2021,,,"Hashkey, Waterdrip, Rebase, Polkaworld","nxzb7m,o7xcsr,xi1pkj,slezx6"
TEA Project,xmaehz,Seed,4/1/2022,1.3,https://teaproject.medium.com/the-tea-project-secures-second-funding-round-to-build-Web3 Capital-decentralized-computing-a2f2e1ea6476,"Bitrise, Dragon Roark, Draper Dragon, Oracles, Peak Performance, Rebase D., subo, Wealth Union, Youbi, JDI","h2tvqq,y7zqs7,caojlf,pwuofb,ids90f,7xtp3e,640hn1,3qflb4,pcw959,vzqumt"
Teleport,aehc1q,Seed,10/1/2022,9,,"305 Ventures, 6th Man, Anti, Common Metal, Dan Romero, Foundation, Jake Paul, NxGen, Road, Ryan McKillen, Ryan Petersen, Thursday","dnl49s,hol96b,7zg71v,osmf1q,k2s470,9td18r,1u0fcq,rgk0ot,oygqys,d14rf6,w3oxcr,jyihc4"
Tempo,l84cmm,Seed,3/1/2023,2.6,,"Flori, Reshape","ajzzhi,6i9wk0"
Tensorplex,fuqiiy,Seed,03/21/2024,3,https://www.coindesk.com/business/2024/03/21/web-3-startup-tensorplex-labs-raises-3m-seed-funding-to-decentralize-ai/,"Canonical Crypto, Collab+Currency, DCG, Quantstamp, Amber","596ql7,zaf9xh,apd14v,dniqw5,z37132"
Terminal3,gf055c,Seed,3/1/2023,,https://finance.yahoo.com/news/terminal-3-raises-pre-seed-044113273.html,"500 Global, Bixin, BlackPine, Bored Room, CMCC Global, Consensys, DWeb3","vmqmcr,gun7y3,7fb6dj,xs4jo6,l70dye,p7lpx4,qreqzv"
Theta Fuel,bsun3b,Seed,11/1/2017,8.26,,"DCM, ZMT, Sierra","jtci9b,xemx4j,jsixr8"
Theta Fuel,bsun3b,Series A,1/1/2018,29.1,,"Advancit, aelf., Bertelsmann, Colopl Next, Creative Artists Agency, DHVC, GC VR, GREE, Green Pine, Heuristic, Infinite, Nirvana, Seraph, Sony Innovation, Sparkland, Stateless, Zhiping, No Talking, Samsung NEXT","2gx4h3,8si3f3,q4zzkd,eecm9d,dm8c6w,772xwk,1qi0o8,sqo7f5,6lkk39,ugqddc,fxmvug,kzsrt6,83uzvl,two8m9,htcsi1,p663q8,6jmeak,owrgxe,1im0oz"
Theta Fuel,bsun3b,Series B,3/1/2021,100,https://coinchapter.com/institutional-investors-stake-over-100-million-in-theta-network/,"Alpha Sigma, Axone, Cambridge Associates, Du, GFR, Greycroft, gumi Cryptos, HyperChain, IBC Blockchain, IOBC, IOSG, Katy Perry, LBank Labs, Primitive, RR2, Venture Reality","buime9,muazsx,03yfei,c94bgn,qriiq5,4vsf2b,y5m26s,gftio8,bzh3wn,lp0gdl,i1x9du,safmd6,89glxu,xl9a26,yibv9g,yb6ohe"
Together.ai,rr8fxt,Seed,9/1/2022,4,,"Cadenza, Definition","nk4njt,64cas2"
Together.ai,rr8fxt,Series A,5/1/2023,20,https://techcrunch.com/2023/05/15/together-raises-20m-to-build-open-source-generative-ai-models/,"A Inn, Alexander Atallah, Chafic Kazoun, Chase Lochmiller, Common Metal, David Eisenberg, Factory, First Round, Jakob Uszkoreit, Jeff Hammerbacher, Jennifer Campbell, Lip-Bu Tan, Long Journey, Lux, Marc Bhargava, MC Lader, Robot, Sabrina Hahn, SCB 10X, Scott Banister, SongYee Yoon, Susa, SV Angel, Xiaodong Song, Yi Sung Yong, Zach Frankel","0zuwkc,1crmhb,hbf50y,kox5i6,osmf1q,gvjegy,wloi1k,8nd6rp,hnvfm3,zkz4v0,t50iac,rnhq72,stdr1v,9tdi8p,08avju,38n337,eyy236,h2kgqh,1nuvtk,tqxo96,ksh3he,tifbbe,k1e97y,by636n,3mawmt,9yjtz6"
Together.ai,rr8fxt,Series B,11/1/2023,102.5,https://techcrunch.com/2023/11/29/together-lands-102-5m-investment-to-grow-its-cloud-for-training-generative-ai/,"Kleiner Perkins, Nvidia, Emergence","u3ke67,m1prxp,31tqgm"
Trace,bjvhmg,Seed,6/1/2021,1.63,https://www.newsbtc.com/news/company/trace-network-raises-strategic-investment-of-over-1-6-million-from-leading-blockchain-investors/,"18Ventures, Acheron Trading, AU21, DAO Maker, Delta Blockchain, EtH Design, GBV, Genblock, Inclusion, LD, Lotus, Mapleblock, Master, MoonBoots, Moonrock, Moonwhale, MorningStar, NGC, OKX, Sandeep Nailwal","bf6y5u,n6kqj7,xmw0ev,ia20oh,drq7a8,grev3h,rlo5x9,5dsvsj,3uz422,qqc9zd,fnoivv,tzyxtr,ka4f30,5252r4,n73vnt,dd123i,k9u90q,07pxi6,smqwtv,9e1gk4"
Tresorio,l7nsll,Preseed,7/1/2019,0.54,https://www.tresorio.com/en/post/tresorio-raises-480-000-to-accelerate-its-development,"Deret FD, Sistema Strategy, Unico","5ryb7f,zbuynd,9ell91"
Trixta,3ztu6q,Preseed,1/1/2018,0.68,,Yossi Hasson,lphuqy
Tromero,hi03tk,Seed,7/1/2023,1.92,https://tech.eu/2023/07/18/tromero-raises-ps15-million-to-make-ai-training-and-hosting-cheaper-through-crypto-mining/,"Ambush, BlueYard","w5c605,jo973z"
UKISS,4uhpxf,Preseed,12/1/2021,,,"BlocTech, CB, DCT, Eastern, Eastern Epics, IBM, Jupyton, Sheesha, Supra","is950u,606zzb,gpswp8,ki7fc2,zmuz4i,76c6i8,87tpbd,nr57n8,u8r7ah"
Untangled,xexd0a,Series A,10/1/2023,13.5,https://www.coindesk.com/business/2023/10/10/tokenized-rwa-platform-untangled-goes-live-gets-135m-funding-to-bring-private-credit-on-chain/,"Fasanara, First Impact","5sjxy4,njueo3"
Uplink,hq5oeh,Series A,04/11/2024,10,https://www.coindesk.com/business/2024/04/11/depin-platform-uplink-raises-10m-led-by-framework-ventures/,"Framework, Blockchange, Stratos Technologies, Outlier, NxGen, MSM,","yx4w71,hbpmm3,3c4o3d,vjpj24,rgk0ot,xzl1ax"
Allora,qs7j6q,Seed,5/1/2021,7.5,https://www.businesswire.com/news/home/20210506005124/en/Upshot-Raises-7.5-Million-in-Series-A-Led-by-Framework-Ventures-CoinFund-and-Blockchain-Capital,"Framework, CoinFund, Blockchain Capital, Slow, Mechanism, Delphi Digital, CMS, Stani Kulechov, Kain Warwick, Ryan Selkis, Andrew Steinwold, Shayne Coplan, Cooper Turley, Meltem Demirors, Tegan Kline, Tony Sheng, Olive Tree, Andy Chorlian","yx4w71,szfiug,te4xtz,ooq1d1,ulvyo3,67mqz0,q4ztc2,3bchmx,f5o3jl,6iy81o,tupwbv,wcgf78,21e2s8,ivtzio,jx87gk,fx71c5,rz9az7,tdmlep"
Allora,qs7j6q,Series A,3/1/2022,22,https://www.businesswire.com/news/home/20220322005518/en/Upshot-Raises-22M-Series-A2-Led-by-Polychain-to-Accelerate-Development-of-Real-Time-NFT-Appraisals,"Polychain, Framework, CoinFund, Blockchain Capital, Slow, Mechanism, Delphi Digital","tqh3bl,yx4w71,szfiug,te4xtz,ooq1d1,ulvyo3,67mqz0"
Vaiot,sa6vqu,Seed,9/1/2020,5,https://siliconcanals.com/news/vaiot-combines-ai-and-blockchain-digitise-business-processes-raises-seed-funding/,MoonBoots,5252r4
Validation Cloud,rzmrjq,Series A,02/27/2024,5.8,https://twitter.com/ValidationCloud/status/1762505693188280432,"Cadenza, Side Door, AP Capital, Metamatic, Bloccelerate, Blockwall, GS Futures, Blockchain Founders Fund","nk4njt,qee5ia,zf718v,ayfq46,ykzwbk,n01vko,6bvve4,b2ybqs"
Verisoul,2gzcyz,Seed,9/1/2023,3.25,https://www.verisoul.ai/press-releases/verisoul-raises-3m-to-help-businesses-conquer-fake-users,"BITKRAFT, Hashkey, King River, Michael Monovoukas, Monoceros, Third Prime, 500 Global","y69z86,nxzb7m,ztth3k,5iut57,566vlr,vub62z,vmqmcr"
Veritree,hhtpfc,Preseed,3/1/2023,,,"Broad Street Bulls, GarageCapital, Northside","xgfw21,o0iklv,jp3dfy"
VIP3,517uvj,Seed,8/1/2023,2,https://www.globenewswire.com/news-release/2023/08/07/2719930/0/en/VIP3-io-Raised-2-Million-in-Seed-Round-Financing-Unveils-Innovative-On-Chain-Membership-Platform.html,"Ankr, IOBC, Paka","yxetck,lp0gdl,tnkrzw"
VO2,6q3z9k,Preseed,3/1/2022,0.4,https://technical.ly/startups/vo2-techstars-sports-accelerator/,"Eberg, Pareto, Rough Draft, Techstars","3hpi7k,v0jbet,mifera,a1uyxq"
Waev,mwkpfa,Preseed,1/1/2022,,,"305 Ventures, Shima","dnl49s,lhs5s8"
Wayru,e9hjh5,Seed,5/1/2022,2,https://www.ledgerinsights.com/blockchain-based-wifi-network-wayru-raises-2-million/,"Borderless, Hortifruti Natural da Terra, Big Brain, Meld, LVT, Algorand, Ferrum Network, Pulsar","buo8ql,tlnemh,4l8mmr,j74kap,6ewe4i,s7b833,kfrb1r,6ob6ls"
WeatherXM,ff9s3p,Seed,06/01/2022,5,https://www.theblock.co/post/154820/web3-network-weatherxm-raises-5-million-in-seed-fundinghttps://www.theblock.co/post/154820/web3-network-weatherxm-raises-5-million-in-seed-funding,"Placeholder, Metaplanet, Consensys Mesh, Protocol Labs,","bku3ew,lszufu,vh40ts,ti312b"
WeatherXM,ff9s3p,Series A,05/22/2024,7.7,https://x.com/TheBlock__/status/1793265598991831507,"Lightspeed, Protocol Labs, Borderless, Arca, Alumni, Placeholder, Red Beard, Metaplanet, GS Futures, Consensys Mesh, dlab, Eleftherios Diakomichalis, Juan Benet","rwhpsx,ti312b,buo8ql,jme2re,4bc5rd,bku3ew,6cp8be,lszufu,6bvve4,vh40tsvwl1vt,b9dhtc,zbmcb4"
Weavechain,s1imi6,Preseed,11/1/2021,1.5,,"Parade, Accel, Accelerator, Asymmetric, Rolling Fun","1vwual,idlbd7,l1kfuu,uoqi1k,zxs7x9"
Weaver Labs,nyvs73,Preseed,12/1/2021,0.53,https://justentrepreneurs.co.uk/news/weaver-labs-secures-400000-uk-government-funding-in-future-ran-competition,UK Government,jou5v4
DIN,eiyl95,Seed,5/6/2023,4,https://web3go.medium.com/binance-labs-leads-4m-investment-in-web3gos-new-journey-acffd6f1066,"Binance, Hashkey, NGC, Shima, IVC, LIF, Big Brain, Archerman","mrgeec,nxzb7m,07pxi6,lhs5s8,ffo7hj,soy2bu,4l8mmr,ir12xk"
WeDataNation,ah17kx,Accelerator,2/28/2023,,https://blockchain-founders.io/news/blockchain-founders-group-accelerates-wedatanation-to-empower-new-data-economy,Blockchain Founders Fund,b2ybqs
WeHealth,80us6v,Preseed,12/1/2020,0.33,,StartUp Health,trl8xo
WiCrypt,ynsj12,Preseed,11/1/2021,1.5,https://disruptafrica.com/2021/11/08/nigerian-wi-fi-sharing-startup-wicrypt-raises-1-5m-funding/,"AU21, Sandeep Nailwal, OccamDAO, Inclusion, Outlier, Chain, Pluto Digital Assets, Onega, N7 Labs, PolkaFoundary","xmw0ev,9e1gk4,ucdc3l,3uz422,vjpj24,0msybz,upyuaz,h3awvl,z6hza6,t9hlod"
WiFi Map,xz6ffz,Preseed,3/1/2023,1.6,https://medium.com/wifi-map/wifi-is-coming-to-the-trustswap-launchpad-tomorrow-2646117ec46e,"Escape Velocity, M31","7zvxz8,b1ba0p"
Wiman,ypklkh,Preseed,12/1/2016,0.42,https://www.finsmes.com/2016/12/wiman-raises-approx-e400k-in-funding.html,"P101, Microsoft, Club Italia, Tim, Working, Nana Bianca, FbStart","qu8lyc,mc0vmp,2t0mdx,fpwnny,hmrrh1,441jsf,0pg1hz"
Woolly Farms,xh846b,Preseed,4/1/2022,0.58,https://startupstorymedia.com/insights-bengaluru-based-woolly-farms-gets-an-investment-of-rs-4-39-cr-from-mumbai-angels-and-others/,"Arjunaid, Callapina, Konglo, Malabar Angels, MAVM Angels, Mentorous, Rahul Nair","tp1utn,q2yhs8,jjax7d,w3mg1d,iy5jcg,jo3t4g,do6tql"
World Mobile,fo1iua,Series A,8/1/2021,39,https://www.coindesk.com/markets/2021/08/16/world-mobile-wraps-39m-token-sale-to-launch-mesh-network-in-zanzibar/,"BlocTech, Deutsche Telekom, DWF, MoonBoots, Viola","is950u,7dddth,i98114,5252r4,o7axgq"
XMTP,rvdlk1,Series A,9/1/2021,20,https://www.coinspeaker.com/Web3 Capital-protocol-xmtp-raises-20m/,"Aaron Batalion, Alchemy, Alexander Taub, Alexis Ohanian, Alison Grigonis, a16z, Anthony Pompliano, Anthony Sassano, Atelier, Austin Green, Austin Rief, Balaji Srinivasan, Ben Huh, Betaworks, Betaworks, Bill Boebel, Bobby Goodlatte, Bored Elon, Brian Forde, Chris Coyne, Chris Kurdziel, Coinbase, Cooper Turley, Courtney Guertin, Dan Romero, Danny Newman, Derek Colla, Diogo Monica, Distributed Global, Eamon Leonard, Eric Arsenault, Ethan Beard, Fernando Martinelli, Fiona Kelly, Form, Harsh Patel, Hawktail, IDEO CoLab, Itamar Lesuisse, Jamie Dubs, Jamis Johnson, Jason Warner, Jess Sloss, Jesse Grushack, Jesse Pollack, Jinglan Wang, Joe Stump, Jon Choi, Jordan Messina, Joseph Lallouz, Joseph Lau, Josh Fraser, Josh March, Julia Lipton, Justin Boreta, Kain Warwick, Kayvon Beykpour, Leyden, Maaria Bajwa, Martin Green, Matt Condon, Matthew Liu, Maxwell Krohn, Meltem Demirors, Michael Dunworth, Michael Mignano, Morgan Beller, Narendra Rocherolle, Nascent, Nat Eliason, Naval Ravikant, Nikil Viswanathan, Nir Kabessa, Not Boring, Offline, Pablo Rodriguez, Packy McCormick, Patricio Worthalter, Paul Stamatiou, Paul Veradittakit, Rahul Vohra, Raihan Anwar, Redpoint, Reginald James, Richard Burton, Ricky Engelberg, Robert Leshner, Roham Gharegozlou, Ryan Adams, Ryan Selkis, Santiago Santos, Scalar, Scott Belsky, Scott Lewis, Sebastien Audet, Semantic, Shishir Mehrotra, SK, Sound, Sriram Krishnan, Stani Kulechov, StarkWare, Tegan Kline, Todd Goldberg, Trevor McFedries, Tyler Willis","m21s7e,opiq98,2uillv,omhdmx,tbwpai,d40or5,rr0j76,cd2nay,lmepop,k5yniy,9v9ugt,896jil,dbo8tt,eqr6sq,eqr6sq,7pgfvz,bks4ew,tr916u,km2if5,phdncr,dbskiw,73opsz,21e2s8,wbr2bp,k2s470,x7118g,84vchg,ub70vu,sknhsa,56m0g5,mgnesp,g7agdk,469hl6,0yezfi,rip35s,xuzons,s2rvpp,l7sko2,i3z0du,fk1fe5,68ov85,c8adar,e22hk8,ftggor,qseex0,50jw3f,7qpopw,r21x33,x873w6,hai5f5,vneh4n,peq6op,3251gx,h3klar,0p4k7g,f5o3jl,h32wcl,7c0m37,53hd8j,etvgeg,el1juk,5q4e79,t0ydan,ivtzio,ojwcp9,hzpxiq,qplnp8,zz3fnm,gnhylz,xezjxn,co49ki,2nph6s,uj91b9,b53azd,0rh814,dmnm1n,o2577p,820cst,wz0frs,tu6afb,hum3ve,9ox376,zhjcle,6zh0nn,2t3jg5,thv317,sz5x0j,k8lm1b,1ev9k4,6iy81o,ksae6d,telo89,07gk2w,44ad84,8a6o80,z0wsaf,6hxbzz,2abi82,z8j32q,myil2k,3bchmx,vrsed8,jx87gk,h8bix0,gwi3em,35j3pt"
XNET,pyz7yz,Preseed,10/1/2022,1,,"Escape Velocity, Borderless","7zvxz8,buo8ql"
Ylide,zug89a,Preseed,3/1/2023,,,"Alchemy Insights, Cogitent, Ryan Fang, Unlimint, Beacon","jtzx5o,bxcu1r,7vs71r,o76txg,6nxw7d"
YogaPetz,1gh368,Seed,2/1/2024,5,https://twitter.com/Yogapetz/status/1755646539610157102,"Animoca, Newman, Soul","gjt0lb,pnypo2,oz31a8"
Zeetta,6gz71b,Seed,8/8/2017,1.82,https://techspark.co/blog/2017/08/08/zeetta-networks-raises-1-6m-latest-funding-round/,"Bloc, Breed Reply, IP Group, HEFCE, ICURe, Telecom Infra Project, Orange Fab France, Engie","e59pqh,v28p9a,8ulqrg,0pcodk,gkjom1,gmweh7,kxmrz5,8em4a3"
Zeppelin,cvzsdf,Seed,8/1/2022,3,,"6th Man, Factor, GSR, Escape Velocity","hol96b,rmj9ht,v81ftp,7zvxz8"
Zonal,gsucx5,Preseed,12/1/2023,,,Escape Velocity,7zvxz8
Zoth,4l25dn,Seed,12/1/2022,,,"Ajeet Khurana, Amesten, Arvind Charanyan, Ayyappan Rajagopal, David John Atkinson, Founderships, Kunal Shah, Lakshminarayan Swaminathan, Matt Elston, On Deck, Orbit, Reflexical, Sidd Gandhi, SOSV, Tassilo Festetics, Varun Sadana, Viram Shah","oixym4,wv0c6u,17gwc8,z7nhe9,b88od5,8bpixq,t4yd43,1d0vnd,1tnc8x,h6gukx,fvpynw,sv52so,l4ot1d,8cibwi,hesk1z,p65ot4,v450ah"
Spheron,bpnvkv,Series A,11/26/2023,7,https://www.linkedin.com/posts/techprashantmaurya_web3-activity-7122206249290452993-PK8Q?utm_source=share&utm_medium=member_desktop,"Alphawave, Nexus Venture Partners, Zee Prime, Protocol Labs, Consensys Mesh, Paradigm, Tykhe Block, Matrix, 3one4, ISEED, DCX, Hash#CIB, Sandeep Nailwal, Aniket Jindal, Julian Traversa, Anish Mohammed, Ajit Tripathi","uydtk8,fmhhl6,urug6u,ti312b,vh40ts,tfi9fe,yviisw,ikeqay,4zcbhk,2x1lbw,zpvc7c,yoijyl,9e1gk4,knfugm,et0tra,ui1axd,h6uwpw,"
Arc,234u26,Seed,07/07/2024,10.2,http://asdasd,"Accord,Accelerate Labs","qzewsg,kans6x"